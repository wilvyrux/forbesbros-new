body{font-size:14px}ul{list-style:none}a,div,h1,h2,h3,h4,h5,p,ul li{letter-spacing:inherit!important}header.header{border:0}header.header.headroom.headroom--not-top{background:rgba(0,0,0,.9)}.copyright__list li{padding:15px}.copyright__list{display:-ms-flexbox!important;display:flex!important;-ms-flex-wrap:wrap!important;flex-wrap:wrap!important;-ms-flex-align:center;align-items:center;-ms-flex-pack:center!important;justify-content:center!important}.site-footer .footer-column{max-width:100%;-ms-flex:0 0 100%;flex:0 0 100%;text-align:center}.site-footer .footer-column .widget_nav_menu .menu{display:-ms-flexbox!important;display:flex!important;-ms-flex-wrap:wrap!important;flex-wrap:wrap!important;-ms-flex-align:center;align-items:center;-ms-flex-pack:center!important;justify-content:center!important}.site-footer .footer-column .widget_nav_menu .menu li{padding:10px}.fp-taxonomy-wrapper,.project-taxonomy{display:-ms-flexbox!important;display:flex!important;-ms-flex-wrap:wrap!important;flex-wrap:wrap!important;-ms-flex-align:center;align-items:center;-ms-flex-pack:center!important;justify-content:center!important}.fp-taxonomy-wrapper .fpt-holder,.project-taxonomy .fpt-holder{padding:10px}.fp-taxonomy-wrapper .fpt-holder img,.project-taxonomy .fpt-holder img{width:40px;margin-right:6px}.fp-wrapper{display:-ms-flexbox!important;display:flex!important;-ms-flex-wrap:wrap!important;flex-wrap:wrap!important;-ms-flex-align:center;align-items:center;-ms-flex-pack:center!important;justify-content:center!important;margin:50px 0}.fp-wrapper .fp-inner-holder{width:25%}.forbes-project__item{height:200px;overflow:hidden}.forbes-project__item a{display:-ms-flexbox!important;display:flex!important;-ms-flex-wrap:wrap!important;flex-wrap:wrap!important;-ms-flex-align:flex-end;align-items:flex-end;width:100%;font-size:.9em;padding:20px;text-align:left}.dwqa-breadcrumbs{background:#262626!important}.dwqa-breadcrumbs a{padding:10px;display:inline-block;color:#fff}.dwqa-breadcrumbs .dwqa-current,h2.vc_custom_heading{color:#f36a22!important}h2.vc_custom_heading{padding-bottom:10px;font-size:3em;text-transform:uppercase!important;font-weight:700}.wx-button.align-left,.wx-heading.align-left{text-align:left}.wx-button.align-center,.wx-heading.align-center{text-align:center}.wx-button.align-right,.wx-heading.align-right{text-align:right}.wx-heading{text-decoration:none!important;display:block;margin-top:15px;margin-bottom:55px}@media only screen and (max-width:1000px){.wx-heading{margin-bottom:10px}}.wx-heading .image{width:200px;margin:auto}.wx-heading .fourth-heading,.wx-heading .primary-heading,.wx-heading .secondary-heading,.wx-heading .third-heading{display:inline-block;margin:0;text-transform:uppercase;font-family:Oswald,sans-serif!important;position:relative}.wx-heading .primary-heading{font-size:3em;text-transform:uppercase;margin-bottom:15px;padding-bottom:15px}.wx-heading .primary-heading:after{width:300px;position:absolute;content:"";left:0;bottom:0;height:2px;display:block;background:#fff!important}.wx-heading .secondary-heading{font-size:2.5em;text-transform:uppercase;font-weight:500;color:#f36a22!important}.wx-heading .secondary-heading:before{display:none}.wx-heading .third-heading{font-size:1.3em;text-transform:capitalize;font-weight:500;color:#fff!important;font-family:Roboto,sans-serif!important}.wx-heading .fourth-heading{color:#fff!important;font-size:3.5em;margin-bottom:25px}.wx-heading .heading-subtitle,.wx-heading p{width:80%;margin:auto;font-weight:300;font-style:italic;font-size:1.1em}.wx-heading .image img{margin-top:10px;margin-bottom:20px}.no-subtitle .heading-subtitle,.no-subtitle p{display:none}.wx-heading.align-left .heading-subtitle{text-align:left;width:100%;font-size:1.3em;letter-spacing:inherit;text-transform:capitalize;font-family:Roboto,sans-serif!important;font-style:normal;line-height:24px}.with-subtitle .heading-subtitle,.with-subtitle p{display:none}@media only screen and (max-width:800px){.wx-heading .fourth-heading,.wx-heading .primary-heading,.wx-heading .secondary-heading,.wx-heading .third-heading{font-size:1.5em!important;margin-bottom:10px}}.wx-button.primary-button{color:#fff!important;background:#f36a22!important;border-radius:100px;-moz-border-radius:100px;display:inline-block;padding:10px 30px;text-decoration:none;display:block;width:80%;margin:auto;text-transform:uppercase;text-align:center;margin-bottom:20px}.wx-button.primary-button p{margin:0;font-weight:700;color:#fff!important}.wx-button.primary-button:hover{opacity:.3}.wx-button.secondary-button{border:transparent;font-weight:700;padding:15px 20px;border-radius:5px;-moz-border-radius:5px}.wx-button.secondary-button:before{content:"\f095";margin-right:10px;display:inline-block;font:normal normal normal 14px/1 FontAwesome;font-size:inherit;text-rendering:auto;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-size:1.3em}.wx-button.third-button{color:#fff!important;background:#f36a22!important;display:inline-block;padding:5px 10px}.wx-button.third-button p{display:inline-block;margin:0}.wx-button.third-button:after{content:"\f178";margin-left:5px;display:inline-block;font:normal normal normal 14px/1 FontAwesome;font-size:inherit;text-rendering:auto;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.wx-button.third-button:hover{opacity:.6;transform:translate(15%);-moz-transform:translate(15%);-webkit-transform:translate(15%);-o-transform:translate(15%)}.text-image-wrapper{margin-bottom:25px;position:relative;overflow:hidden}.text-image-wrapper .text-image-holder{position:relative;transition:all .3s ease}.text-image-wrapper .text-image-holder:before{width:100%;height:100px;background:linear-gradient(180deg,transparent 0,rgba(0,0,0,.32) 48%,rgba(0,0,0,.65) 98%,rgba(0,0,0,.65));filter:progid:DXImageTransform.Microsoft.gradient(startColorstr="#00000000",endColorstr="#a6000000",GradientType=0);position:absolute;bottom:0;left:0;content:""}.text-image-wrapper .text-image-holder img{width:100%}.text-image-wrapper .text-image-holder h4{position:absolute;bottom:0;width:100%;left:0;margin:0;padding:20px;text-transform:uppercase;color:#fff!important;font-size:1.875em;transition:all 1s ease;font-weight:500;font-family:Oswald,sans-serif!important}.text-image-wrapper .text-image-holder .overlay{position:absolute;left:0;top:0;width:100%;height:100%;background:rgba(0,0,0,.8);transition:all .3s ease;opacity:0}.text-image-wrapper .text-image-holder .overlay .overlay-holder{width:80%;position:absolute;top:0;height:75px;bottom:0;margin:auto;left:0;right:0;text-align:center;color:#fff!important}.text-image-wrapper .text-image-holder .overlay .overlay-holder h5{text-transform:uppercase;color:#f36a22!important}.text-image-wrapper .text-image-holder .overlay .overlay-holder p{display:inline;color:#fff!important}.text-image-wrapper .text-image-holder .overlay .overlay-holder .description{overflow:hidden;text-overflow:ellipsis;display:-webkit-box;line-height:15px;max-height:32px;-webkit-line-clamp:2;font-size:.8em}.text-image-wrapper .text-image-holder:hover .overlay{display:block;opacity:1}.text-image-wrapper .text-image-holder:hover h4{transform:translateY(100%)}.vc_col-sm-3 .text-image-wrapper .text-image-holder h4{font-size:1.3em}ul.wx-details{width:70%}ul.wx-details li{font-size:1.3em;position:relative;padding-left:50px;margin-bottom:30px;vertical-align:middle}ul.wx-details li:before{display:none}ul.wx-details li a{text-decoration:none;color:#262626!important}ul.wx-details li a:hover{color:#f36a22!important}ul.wx-details li i{font-size:1.2em;display:inline-block}ul.wx-details li:after{display:block;clear:both;content:""}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnRpYWxzL19yZXNldHMuc2NzcyIsInBhcnRpYWxzL19oZWFkZXIuc2NzcyIsIm1vZHVsZXMvX21peGluLnNjc3MiLCJwYXJ0aWFscy9fZm9vdGVyLnNjc3MiLCJwYXJ0aWFscy9fcGFnZXMuc2NzcyIsInBhcnRpYWxzL19icmVhZGNydW1icy5zY3NzIiwibW9kdWxlcy9fY29sb3JzLnNjc3MiLCJwYXJ0aWFscy9faGVhZGluZ3Muc2NzcyIsInBhcnRpYWxzL3d4LXNob3J0Y29kZS9fYWxsd3hzaG9ydGNvZGVzLnNjc3MiLCJwYXJ0aWFscy93eC1zaG9ydGNvZGUvX2hlYWRpbmdzLnNjc3MiLCJtb2R1bGVzL190eXBvZ3JhcGh5LnNjc3MiLCJwYXJ0aWFscy93eC1zaG9ydGNvZGUvX2J1dHRvbnMuc2NzcyIsInBhcnRpYWxzL3d4LXNob3J0Y29kZS9fdGh1bWJuYWlsd3RleHQuc2NzcyIsInBhcnRpYWxzL3d4LXNob3J0Y29kZS9fZGV0YWlscy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLEtBRUksY0FBZSxDQUNsQixBQUVELEdBQ0ksZUFBZ0IsQ0FDbkIsQUFFRCw2QkFVSSxnQ0FBa0MsQ0FDckMsQUNwQkQsY0FFUSxRQUFTLENBUVosQUFWTCx5Q0NhSSx5QkFBbUMsQ0ROdEIsQUVQakIsb0JBQ0ksWUFBYSxDQUNoQixBQUdHLGlCRCtGQSw4QkFBK0IsQUFDL0IsdUJBQXdCLEFBQ3hCLDZCQUE4QixBQUM5Qix5QkFBMEIsQUFXMUIsc0JDM0dvQyxBRDRHcEMsbUJDNUdvQyxBRHFHcEMsK0JBQTRCLEFBQzVCLGdDQUE4QixDQ3BHN0IsQUFHTCw0QkFFUSxlQUFlLEFBQ2Ysa0JBQWMsQUFBZCxjQUFjLEFBQ2QsaUJBQWtCLENBV3JCLEFBZkwsbUREd0ZJLDhCQUErQixBQUMvQix1QkFBd0IsQUFDeEIsNkJBQThCLEFBQzlCLHlCQUEwQixBQVcxQixzQkM5RjRDLEFEK0Y1QyxtQkMvRjRDLEFEd0Y1QywrQkFBNEIsQUFDNUIsZ0NBQThC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dXJjZXNDb250ZW50IjpbImJvZHkge1xyXG4gICAgLy8gZm9udC1mYW1pbHk6ICRmb250LXNlY29uZGFyeTtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxufVxyXG5cclxudWwge1xyXG4gICAgbGlzdC1zdHlsZTogbm9uZTtcclxufVxyXG5cclxuaDEsXHJcbmgyLFxyXG5oMyxcclxuaDQsXHJcbmg1LFxyXG5wLFxyXG5kaXYsXHJcbnVsIGxpLFxyXG5hIHtcclxuICAgIC8vICAgIGZvbnQtZmFtaWx5OiAkZm9udC1zZWNvbmRhcnk7XHJcbiAgICBsZXR0ZXItc3BhY2luZzogaW5oZXJpdCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4vLyAqIHtcclxuLy8gICAgIEBpbmNsdWRlIHRyYW5zaXRpb24oLjNzKTtcclxuLy8gfSIsImhlYWRlciB7XHJcbiAgICAmLmhlYWRlciB7XHJcbiAgICAgICAgYm9yZGVyOiAwO1xyXG4gICAgICAgICYuaGVhZHJvb20ge1xyXG4gICAgICAgICAgICAmLmhlYWRyb29tIHtcclxuICAgICAgICAgICAgICAgICYtLW5vdC10b3Age1xyXG4gICAgICAgICAgICAgICAgICAgIEBpbmNsdWRlIHQtYmxhY2soLjkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiQG1peGluIGJvcmRlci1yYWRpdXMoJHZhbHVlOjVweCkge1xyXG4gICAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAkdmFsdWU7XHJcbiAgICBib3JkZXItcmFkaXVzOiAkdmFsdWU7XHJcbiAgICAtbW96LWJvcmRlci1yYWRpdXM6ICR2YWx1ZTtcclxufVxyXG5cclxuQG1peGluIG5vYmFja2dyb3VuZCB7XHJcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcclxufVxyXG5cclxuLy9CQUNLR1JPVU5EIFJHQkEgQ09MT1JTXHJcbkBtaXhpbiB0LWJsYWNrKCRvcGFjaXR5Oi42KSB7XHJcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsICRvcGFjaXR5KTtcclxufVxyXG5cclxuQG1peGluIHQtd2hpdGUoJG9wYWNpdHk6LjkpIHtcclxuICAgIGJhY2tncm91bmQ6IHJnYmEoMjU2LCAyNTYsIDI1NiwgJG9wYWNpdHkpO1xyXG59XHJcblxyXG5AbWl4aW4gdC1jb2xvcigkdmFsdWUxOjAsICR2YWx1ZTI6MCwgJHZhbHVlMzowLCAkb3BhY2l0eTouOCkge1xyXG4gICAgYmFja2dyb3VuZDogcmdiYSgkdmFsdWUxLCAkdmFsdWUyLCAkdmFsdWUzLCAkb3BhY2l0eSk7XHJcbn1cclxuXHJcbkBtaXhpbiBzaGFkb3cge1xyXG4gICAgLXdlYmtpdC1ib3gtc2hhZG93OiAxcHggMXB4IDVweCAxcHggcmdiYSgwLCAwLCAwLCAuMik7XHJcbiAgICBib3gtc2hhZG93OiAxcHggMXB4IDVweCAxcHggcmdiYSgwLCAwLCAwLCAuMik7XHJcbn1cclxuXHJcbkBtaXhpbiBub3NoYWRvdyB7XHJcbiAgICAtd2Via2l0LWJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcclxuICAgIGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcclxufVxyXG5cclxuQG1peGluIHRyYW5zaXRpb24oJHRpbWUpIHtcclxuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsICR0aW1lIGVhc2U7XHJcbiAgICAtbW96LXRyYW5zaXRpb246IGFsbCAkdGltZSBlYXNlO1xyXG4gICAgLW1zLXRyYW5zaXRpb246IGFsbCAkdGltZSBlYXNlO1xyXG4gICAgLW8tdHJhbnNpdGlvbjogYWxsICR0aW1lIGVhc2U7XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgJHRpbWUgZWFzZTtcclxufVxyXG5cclxuQG1peGluIGZsb2F0aW5nKCRwb3NpdGlvbjphYnNvbHV0ZSwgJHRvcDowLCAkbGVmdDowLCAkcmlnaHQ6MCwgJGJvdHRvbTowKSB7XHJcbiAgICBwb3NpdGlvbjogJHBvc2l0aW9uICFpbXBvcnRhbnQ7XHJcbiAgICB0b3A6ICR0b3AgIWltcG9ydGFudDtcclxuICAgIGxlZnQ6ICRsZWZ0ICFpbXBvcnRhbnQ7XHJcbiAgICByaWdodDogJHJpZ2h0ICFpbXBvcnRhbnQ7XHJcbiAgICBib3R0b206ICRib3R0b20gIWltcG9ydGFudDtcclxufVxyXG5cclxuQG1peGluIHRyYW5zZm9ybV90cmFuc2xhdGUoJHgsICR5KSB7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgkeCwgJHkpO1xyXG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZSgkeCwgJHkpO1xyXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZSgkeCwgJHkpO1xyXG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGUoJHgsICR5KTtcclxufVxyXG5cclxuQG1peGluIHRyYW5zZm9ybV9zY2FsZSgkeCwgJHkpIHtcclxuICAgIHRyYW5zZm9ybTogc2NhbGUoJHgsICR5KTtcclxuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZSgkeCwgJHkpO1xyXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKCR4LCAkeSk7XHJcbiAgICAtby10cmFuc2Zvcm06IHNjYWxlKCR4LCAkeSk7XHJcbn1cclxuXHJcbkBtaXhpbiBib3JkZXIoJHZhbHVlOjFweCwgJHN0eWxlOnNvbGlkLCAkY29sb3I6JGNvbG9yLWJsYWNrKSB7XHJcbiAgICBib3JkZXI6ICR2YWx1ZSAkc3R5bGUgJGNvbG9yO1xyXG59XHJcblxyXG5AbWl4aW4gci1tYXJnaW4ge1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxufVxyXG5cclxuQG1peGluIGFic29sdXRlIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxufVxyXG5cclxuQG1peGluIGZpeGVkIHtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxufVxyXG5cclxuQG1peGluIGZvbnRhd2Vzb21lIHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIGZvbnQ6IG5vcm1hbCBub3JtYWwgbm9ybWFsIDE0cHgvMSBGb250QXdlc29tZTtcclxuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcclxuICAgIHRleHQtcmVuZGVyaW5nOiBhdXRvO1xyXG4gICAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XHJcbiAgICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xyXG59XHJcblxyXG5AbWl4aW4gZmxleCB7XHJcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveCAhaW1wb3J0YW50O1xyXG4gICAgZGlzcGxheTogLW1zLWZsZXhib3ggIWltcG9ydGFudDtcclxuICAgIGRpc3BsYXk6IGZsZXggIWltcG9ydGFudDtcclxuICAgIC1tcy1mbGV4LXdyYXA6IHdyYXAgIWltcG9ydGFudDtcclxuICAgIGZsZXgtd3JhcDogd3JhcCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG5AbWl4aW4gZmxleC1qdXN0aWZ5LWNvbnRlbnQoJGE6Y2VudGVyKSB7XHJcbiAgICAtd2Via2l0LWJveC1wYWNrOiAkYSAhaW1wb3J0YW50O1xyXG4gICAgLW1zLWZsZXgtcGFjazogJGEgIWltcG9ydGFudDtcclxuICAgIGp1c3RpZnktY29udGVudDogJGEgIWltcG9ydGFudDtcclxufVxyXG5cclxuQG1peGluIGZsZXgtYWxpZ24taXRlbXMoJGE6Y2VudGVyKSB7XHJcbiAgICAtd2Via2l0LWJveC1hbGlnbjogJGE7XHJcbiAgICAtbXMtZmxleC1hbGlnbjogJGE7XHJcbiAgICBhbGlnbi1pdGVtczogJGE7XHJcbn1cclxuXHJcbkBtaXhpbiBmbGV4LWNvbHVtbigpIHtcclxuICAgIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XHJcbiAgICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcclxuICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxufSIsIi5jb3B5cmlnaHRfX2xpc3QgbGkge1xyXG4gICAgcGFkZGluZzogMTVweDtcclxufVxyXG5cclxuLmNvcHlyaWdodCB7XHJcbiAgICAmX19saXN0IHtcclxuICAgICAgICBAaW5jbHVkZSBmbGV4O1xyXG4gICAgICAgIEBpbmNsdWRlIGZsZXgtYWxpZ24taXRlbXMoY2VudGVyKTtcclxuICAgICAgICBAaW5jbHVkZSBmbGV4LWp1c3RpZnktY29udGVudChjZW50ZXIpO1xyXG4gICAgfVxyXG59XHJcblxyXG4uc2l0ZS1mb290ZXIge1xyXG4gICAgLmZvb3Rlci1jb2x1bW4ge1xyXG4gICAgICAgIG1heC13aWR0aDogMTAwJTtcclxuICAgICAgICBmbGV4OiAwIDAgMTAwJTtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgLndpZGdldF9uYXZfbWVudSB7XHJcbiAgICAgICAgICAgIC5tZW51IHtcclxuICAgICAgICAgICAgICAgIEBpbmNsdWRlIGZsZXg7XHJcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBmbGV4LWFsaWduLWl0ZW1zKGNlbnRlcik7XHJcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBmbGV4LWp1c3RpZnktY29udGVudChjZW50ZXIpO1xyXG4gICAgICAgICAgICAgICAgbGkge1xyXG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCIucHJvamVjdC10YXhvbm9teSxcclxuLmZwLXRheG9ub215LXdyYXBwZXIge1xyXG4gICAgQGluY2x1ZGUgZmxleDtcclxuICAgIEBpbmNsdWRlIGZsZXgtYWxpZ24taXRlbXMoY2VudGVyKTtcclxuICAgIEBpbmNsdWRlIGZsZXgtanVzdGlmeS1jb250ZW50KGNlbnRlcik7XHJcbiAgICAuZnB0LWhvbGRlciB7XHJcbiAgICAgICAgcGFkZGluZzogMTBweDtcclxuICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICB3aWR0aDogNDBweDtcclxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiA2cHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4uZnAtd3JhcHBlciB7XHJcbiAgICBAaW5jbHVkZSBmbGV4O1xyXG4gICAgQGluY2x1ZGUgZmxleC1hbGlnbi1pdGVtcyhjZW50ZXIpO1xyXG4gICAgQGluY2x1ZGUgZmxleC1qdXN0aWZ5LWNvbnRlbnQoY2VudGVyKTtcclxuICAgIG1hcmdpbjogNTBweCAwO1xyXG4gICAgLmZwLWlubmVyLWhvbGRlciB7XHJcbiAgICAgICAgd2lkdGg6IGNhbGMoMTAwJS80KTtcclxuICAgIH1cclxufVxyXG5cclxuLmZvcmJlcy1wcm9qZWN0X19pdGVtIHtcclxuICAgIGhlaWdodDogMjAwcHg7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgYSB7XHJcbiAgICAgICAgQGluY2x1ZGUgZmxleDtcclxuICAgICAgICBAaW5jbHVkZSBmbGV4LWFsaWduLWl0ZW1zKGZsZXgtZW5kKTtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBmb250LXNpemU6IC45ZW07XHJcbiAgICAgICAgcGFkZGluZzogMjBweDtcclxuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgfVxyXG59IiwiLmR3cWEtYnJlYWRjcnVtYnMge1xyXG4gICAgYmFja2dyb3VuZDogJGNvbG9yLXNlY29uZGFyeTtcclxuICAgIFxyXG4gICAgYSB7XHJcbiAgICAgICAgcGFkZGluZzogMTBweDtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgIC5kd3FhLWN1cnJlbnQge1xyXG4gICAgICAgIGNvbG9yOiAkY29sb3ItcHJpbWFyeTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgXHJcbn0iLCJcclxuLy9DT01NT04gQ09MT1JTXHJcbiRjb2xvci1kYXJrOiMxODE3MTggIWltcG9ydGFudDsgXHJcbiRjb2xvci1ncmF5MjojMjgyODI4ICFpbXBvcnRhbnQ7IFxyXG4kY29sb3ItYmxhY2s6IzAwMDAwMCAhaW1wb3J0YW50OyBcclxuXHJcblxyXG4vL1RIRU1FIFVTRSBDT0xPUlNcclxuJGNvbG9yLWRhcmtibHVlOiMwYTM1NzggIWltcG9ydGFudDsgXHJcbiRjb2xvci1ncmVlbjojMDNiODQwICFpbXBvcnRhbnQ7IFxyXG4kY29sb3ItZ3JheTojNzc3NDc0ICFpbXBvcnRhbnQ7IFxyXG5cclxuJGNvbG9yLXllbGxvdzojZjhjMTA0ICFpbXBvcnRhbnQ7IFxyXG4kY29sb3ItcmVkOiNmMjFiMWIgIWltcG9ydGFudDsgXHJcblxyXG5cclxuJGNvbG9yLWJsdWU6IzAxNzNiYyAhaW1wb3J0YW50OyBcclxuXHJcbiRjb2xvci13aGl0ZTojZmZmICFpbXBvcnRhbnQ7IFxyXG5cclxuJGNvbG9yLWxpZ2h0Z3JheTojZWJlYmViICFpbXBvcnRhbnQ7IFxyXG4kY29sb3ItbGlnaHRncmF5MjojZmJmYWZhICFpbXBvcnRhbnQ7IFxyXG4kY29sb3ItbGlnaHRncmF5MzojZGRkICFpbXBvcnRhbnQ7IFxyXG5cclxuXHJcbiRjb2xvci1kYXJrOiMyNjI2MjYgIWltcG9ydGFudDsgXHJcbiRjb2xvci1vcmFuZ2U6I2YzNmEyMiAhaW1wb3J0YW50OyBcclxuJGNvbG9yLWRhcmtvcmFuZ2U6I2I3NDYwYiAhaW1wb3J0YW50OyBcclxuXHJcbiRjb2xvci1wcmltYXJ5OiRjb2xvci1vcmFuZ2U7IFxyXG4kY29sb3Itc2Vjb25kYXJ5OiRjb2xvci1kYXJrOyBcclxuJGNvbG9yLXRoaXJkOiRjb2xvci13aGl0ZTsgICAgXHJcbiIsImgyLnZjX2N1c3RvbV9oZWFkaW5nIHtcclxuICAgIGNvbG9yOiAkY29sb3Itb3JhbmdlO1xyXG4gICAgcGFkZGluZy1ib3R0b206IDEwcHg7XHJcbiAgICBmb250LXNpemU6IDNlbTtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2UgIWltcG9ydGFudDtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59IiwiXHJcblxyXG4vL2NlbnRlciBzaG9ydGNvZGVzXHJcbi53eC1oZWFkaW5nLmFsaWduLWxlZnQsXHJcbi53eC1idXR0b24uYWxpZ24tbGVmdCBcclxue1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxufSBcclxuXHJcbi53eC1oZWFkaW5nLmFsaWduLWNlbnRlciwgXHJcbi53eC1idXR0b24uYWxpZ24tY2VudGVyIFxyXG57XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn0gXHJcblxyXG4ud3gtaGVhZGluZy5hbGlnbi1yaWdodCxcclxuLnd4LWJ1dHRvbi5hbGlnbi1yaWdodCBcclxue1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbn0gXHJcblxyXG4vL2ZvbnQgdXNlZFxyXG4kZm9udC1zZWxlY3Q6JGZvbnQtcHJpbWFyeTtcclxuXHJcblxyXG5cclxuLy9SRVNQT05TSVZFIFNJWkUgU1RBUlRTIEhFUkVcclxuQGltcG9ydCBcImhlYWRpbmdzXCI7XHJcbkBpbXBvcnQgXCJidXR0b25zXCI7IFxyXG5AaW1wb3J0IFwidGh1bWJuYWlsd3RleHRcIjsgICBcclxuQGltcG9ydCBcImRldGFpbHNcIjsgICAgIFxyXG4gXHJcblxyXG5cclxuIiwiXHJcbi8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG4vL0hFQURJTkdTXHJcbi8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuLy9IRUFESU5HIFNUWUxFIDFcclxuLnd4LWhlYWRpbmcge1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lICFpbXBvcnRhbnQ7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIG1hcmdpbi10b3A6IDE1cHg7XHJcbiAgICAvLyBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNTVweDtcclxuXHJcbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMDBweCkge1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICAuaW1hZ2Uge1xyXG4gICAgICAgIHdpZHRoOiAyMDBweDtcclxuICAgICAgICBtYXJnaW46IGF1dG87XHJcbiAgICB9XHJcblxyXG4gICAgLnByaW1hcnktaGVhZGluZyxcclxuICAgIC5zZWNvbmRhcnktaGVhZGluZyxcclxuICAgIC50aGlyZC1oZWFkaW5nLFxyXG4gICAgLmZvdXJ0aC1oZWFkaW5nXHJcbiAgICB7XHJcblxyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuLy8gICAgICAgIGZvbnQtc2l6ZTozLjA2M2VtO1xyXG4gICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiAkZm9udC1wcmltYXJ5O1xyXG4gICAgICAgIC8vICAgICAgICBjb2xvcjogJGNvbG9yLWRhcms7XHJcbi8vICAgICAgICBmb250LXdlaWdodDogJGJvbGQ7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAgICAgICAvLyAmOjpiZWZvcmUge1xyXG4gICAgICAgIC8vICAgICBjb250ZW50OiAnJztcclxuICAgICAgICAvLyAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIC8vICAgICBoZWlnaHQ6IDIxcHg7XHJcbiAgICAgICAgLy8gICAgIHdpZHRoOiAxMTRweDtcclxuICAgICAgICAvLyAgICAgYm90dG9tOiAtMjVweDtcclxuICAgICAgICAvLyAgICAgbWFyZ2luLXJpZ2h0OiAxNXB4O1xyXG4gICAgICAgIC8vICAgICAvKiBtYXJnaW4tYm90dG9tOiAtMjBweDsgKi9cclxuICAgICAgICAvLyAgICAgbWFyZ2luOiBhdXRvICFpbXBvcnRhbnQ7XHJcblxyXG4gICAgICAgIC8vICAgICByaWdodDogMDtcclxuICAgICAgICAvLyAgICAgbGVmdDogMDtcclxuICAgICAgICAvLyAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG5cclxuICAgICAgICAvLyB9XHJcblxyXG5cclxuXHJcbiAgICB9XHJcblxyXG5cclxuXHJcblxyXG4gICAgLnByaW1hcnktaGVhZGluZyB7XHJcbiAgICAgICAgZm9udC1zaXplOiAzZW07XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAxNXB4O1xyXG5cclxuXHJcbiAgICAgICAgJjo6YWZ0ZXIge1xyXG4gICAgICAgICAgICB3aWR0aDozMDBweDtcclxuICAgICAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6Jyc7XHJcbiAgICAgICAgICAgIGxlZnQ6MDtcclxuICAgICAgICAgICAgYm90dG9tOjA7XHJcbiAgICAgICAgICAgIGhlaWdodDoycHg7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6YmxvY2s7IFxyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiRjb2xvci13aGl0ZTtcclxuICAgICAgICB9XHJcblxyXG5cclxuLy8gICAgICAgICY6OmJlZm9yZSB7XHJcbi8vICAgICAgICAgICAgIGJhY2tncm91bmQ6IHVybCgnLi4vY3VzdG9tLXBocC9zcHJpdGUuanBnJyluby1yZXBlYXQ7XHJcbi8vICAgICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuICAgIC5zZWNvbmRhcnktaGVhZGluZyB7XHJcbiAgICAgICAgZm9udC1zaXplOiAyLjVlbTtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiAkbWVkaXVtO1xyXG4gICAgICAgIGNvbG9yOiAkY29sb3ItcHJpbWFyeTtcclxuXHJcblxyXG4gICAgICAgICY6OmJlZm9yZSB7XHJcbiAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLnRoaXJkLWhlYWRpbmcge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS4zZW07XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6ICRtZWRpdW07XHJcbiAgICAgICAgY29sb3I6ICRjb2xvci13aGl0ZTtcclxuICAgICAgICBmb250LWZhbWlseTogJGZvbnQtc2Vjb25kYXJ5O1xyXG5cclxuICAgIH1cclxuXHJcblxyXG4gICAgLmZvdXJ0aC1oZWFkaW5nIHtcclxuICAgICAgICBjb2xvcjogJGNvbG9yLXdoaXRlO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMy41ZW07XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMjVweDtcclxuXHJcblxyXG4gICAgfVxyXG5cclxuXHJcbiAgICAuaGVhZGluZy1zdWJ0aXRsZSxwIHtcclxuICAgICAgICB3aWR0aDogODAlO1xyXG4gICAgICAgIG1hcmdpbjogYXV0bztcclxuICAgICAgICBmb250LXdlaWdodDogJGxpZ2h0O1xyXG4gICAgICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxuICAgICAgICBmb250LXNpemU6IDEuMWVtO1xyXG4gICAgfVxyXG5cclxuICAgIC5pbWFnZSB7XHJcbiAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogMTBweDtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuXHJcbn1cclxuXHJcbi5uby1zdWJ0aXRsZSB7XHJcbiAgICAuaGVhZGluZy1zdWJ0aXRsZSxwIHtcclxuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxufVxyXG5cclxuXHJcbi53eC1oZWFkaW5nLmFsaWduLWxlZnQge1xyXG4gICAgLmhlYWRpbmctc3VidGl0bGUge1xyXG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjNlbTtcclxuLy8gICAgICAgIGZvbnQtd2VpZ2h0OiAkYm9sZDtcclxuICAgICAgICBsZXR0ZXItc3BhY2luZzogaW5oZXJpdDtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcclxuICAgICAgICBmb250LWZhbWlseTogJGZvbnQtc2Vjb25kYXJ5O1xyXG4gICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgICAgICBsaW5lLWhlaWdodDogMjRweDtcclxuICAgIH1cclxufVxyXG5cclxuLndpdGgtc3VidGl0bGUge1xyXG4gICAgLmhlYWRpbmctc3VidGl0bGUscHtcclxuICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG5cclxufVxyXG5cclxuXHJcblxyXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDo4MDBweCkge1xyXG5cclxuICAgICAgICAgLnd4LWhlYWRpbmcge1xyXG4gICAgICAgICAgICAgICAgLnByaW1hcnktaGVhZGluZyxcclxuICAgICAgICAgICAgICAgIC5zZWNvbmRhcnktaGVhZGluZyxcclxuICAgICAgICAgICAgICAgIC50aGlyZC1oZWFkaW5nLFxyXG4gICAgICAgICAgICAgICAgLmZvdXJ0aC1oZWFkaW5nXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxLjVlbSAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgIH1cclxuXHJcblxyXG4gICAgfVxyXG4iLCIkZm9udC1wcmltYXJ5OidPc3dhbGQnLCBzYW5zLXNlcmlmICFpbXBvcnRhbnQ7IFxyXG4kZm9udC1zZWNvbmRhcnk6J1JvYm90bycsIHNhbnMtc2VyaWYgIWltcG9ydGFudDtcclxuJGZvbnQtdGhpcmQ6J09wZW4gU2FucycsIHNhbnMtc2VyaWYgIWltcG9ydGFudDtcclxuXHJcblxyXG4vL0ZPTlQgV0VJR0hUIFxyXG4kbGlnaHQ6MzAwO1xyXG4kbWVkaXVtOjUwMDtcclxuJHJlZ3VsYXI6NDAwO1xyXG4kYm9sZDo3MDA7IFxyXG4kc2VtaWJvbGQ6NjAwO1xyXG5cclxuIiwiXHJcblxyXG4vLyoqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuLy9CVVRUT05TIFxyXG4vLyoqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuXHJcbi8vQlVUVE9OUyBTVFlMRSAxIFxyXG5cclxuXHJcbi53eC1idXR0b24ucHJpbWFyeS1idXR0b24ge1xyXG4gICAgICAgIGNvbG9yOiAkY29sb3Itd2hpdGU7XHJcbiAgICAgICAgYmFja2dyb3VuZDogJGNvbG9yLXByaW1hcnk7XHJcbiAgICAgICAgQGluY2x1ZGUgYm9yZGVyLXJhZGl1cygxMDBweCk7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIHBhZGRpbmc6IDEwcHggMzBweDtcclxuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICBtYXJnaW46IGF1dG87XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbToyMHB4O1xyXG4gICAgXHJcbiAgICAgICAgcCB7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6ICRib2xkO1xyXG4gICAgICAgICAgICAgY29sb3I6ICRjb2xvci13aGl0ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIG9wYWNpdHk6IC4zO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgIH1cclxuXHJcbi53eC1idXR0b24uc2Vjb25kYXJ5LWJ1dHRvbiB7XHJcbiAgICAgICAgYm9yZGVyOnRyYW5zcGFyZW50O1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiAkYm9sZDtcclxuICAgICAgICBwYWRkaW5nOiAxNXB4IDIwcHg7XHJcbiAgICAgICAgQGluY2x1ZGUgYm9yZGVyLXJhZGl1cyg1cHgpO1xyXG4gICAgICAgIFxyXG4gICAgICAgICY6OmJlZm9yZSB7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBjb250ZW50OiBcIlxcZjA5NVwiO1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbiAgICAgICAgICAgIEBpbmNsdWRlIGZvbnRhd2Vzb21lO1xyXG4gICAgICAgICAgICBmb250LXNpemU6MS4zZW07IFxyXG4gICAgICAgICAgICBcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgIFxyXG4gICAgICAgIFxyXG59XHJcbiAgICBcclxuICAgICAgIFxyXG4gICAgXHJcbi53eC1idXR0b24udGhpcmQtYnV0dG9uIHtcclxuICAgIGNvbG9yOiAkY29sb3Itd2hpdGU7XHJcbiAgICBiYWNrZ3JvdW5kOiAkY29sb3ItcHJpbWFyeTtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHBhZGRpbmc6IDVweCAxMHB4O1xyXG4gICAgICAgIFxyXG4gICAgcCB7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIG1hcmdpbjogMDtcclxuICAgIH1cclxuICAgICBcclxuICAgICAgICBcclxuICAgICY6OmFmdGVyIHsgXHJcbiAgICAgICAgY29udGVudDogXCJcXGYxNzhcIjtcclxuICAgICAgICBtYXJnaW4tbGVmdDogNXB4O1xyXG4gICAgICAgIEBpbmNsdWRlIGZvbnRhd2Vzb21lO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgICBvcGFjaXR5OiAuNjtcclxuICAgICAgICBAaW5jbHVkZSB0cmFuc2Zvcm1fdHJhbnNsYXRlKDE1JSwwKTtcclxuICAgIH1cclxuICAgICAgICBcclxufVxyXG5cclxuXHJcblxyXG5cclxuIiwiQG1peGluIGNvbG9yLWdyYWRpZW50IHtcclxuLyogUGVybWFsaW5rIC0gdXNlIHRvIGVkaXQgYW5kIHNoYXJlIHRoaXMgZ3JhZGllbnQ6IGh0dHA6Ly9jb2xvcnppbGxhLmNvbS9ncmFkaWVudC1lZGl0b3IvIzAwMDAwMCs0OCwwMDAwMDArMTAwJjArMCwwLjY1Kzk4ICovXHJcbmJhY2tncm91bmQ6IC1tb3otbGluZWFyLWdyYWRpZW50KHRvcCwgIHJnYmEoMCwwLDAsMCkgMCUsIHJnYmEoMCwwLDAsMC4zMikgNDglLCByZ2JhKDAsMCwwLDAuNjUpIDk4JSwgcmdiYSgwLDAsMCwwLjY1KSAxMDAlKTsgLyogRkYzLjYtMTUgKi9cclxuYmFja2dyb3VuZDogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG9wLCAgcmdiYSgwLDAsMCwwKSAwJSxyZ2JhKDAsMCwwLDAuMzIpIDQ4JSxyZ2JhKDAsMCwwLDAuNjUpIDk4JSxyZ2JhKDAsMCwwLDAuNjUpIDEwMCUpOyAvKiBDaHJvbWUxMC0yNSxTYWZhcmk1LjEtNiAqL1xyXG5iYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCAgcmdiYSgwLDAsMCwwKSAwJSxyZ2JhKDAsMCwwLDAuMzIpIDQ4JSxyZ2JhKDAsMCwwLDAuNjUpIDk4JSxyZ2JhKDAsMCwwLDAuNjUpIDEwMCUpOyAvKiBXM0MsIElFMTArLCBGRjE2KywgQ2hyb21lMjYrLCBPcGVyYTEyKywgU2FmYXJpNysgKi9cclxuZmlsdGVyOiBwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuZ3JhZGllbnQoIHN0YXJ0Q29sb3JzdHI9JyMwMDAwMDAwMCcsIGVuZENvbG9yc3RyPScjYTYwMDAwMDAnLEdyYWRpZW50VHlwZT0wICk7IC8qIElFNi05ICovXHJcblxyXG5cclxufVxyXG5cclxuXHJcbi50ZXh0LWltYWdlLXdyYXBwZXIge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjVweDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcblxyXG4gICAgLnRleHQtaW1hZ2UtaG9sZGVyIHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbiguM3MpO1xyXG5cclxuXHJcbiAgICAgICAgJjo6YmVmb3JlIHtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTAwcHg7XHJcbiAgICAgICAgICAgIEBpbmNsdWRlIGNvbG9yLWdyYWRpZW50O1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGg0IHtcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICBib3R0b206IDA7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkY29sb3Itd2hpdGU7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS44NzVlbTtcclxuICAgICAgICAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbigxcyk7XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiAkbWVkaXVtO1xyXG4gICAgICAgICAgICBmb250LWZhbWlseTokZm9udC1wcmltYXJ5O1xyXG4gICAgICAgICAgICBcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5vdmVybGF5IHtcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgIEBpbmNsdWRlIHQtYmxhY2soLjgpO1xyXG4vLyAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgICAgIEBpbmNsdWRlIHRyYW5zaXRpb24oLjNzKTtcclxuICAgICAgICAgICAgb3BhY2l0eTogMDtcclxuXHJcbiAgICAgICAgICAgIC5vdmVybGF5LWhvbGRlciB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogODAlO1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA3NXB4O1xyXG4gICAgICAgICAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgY29sb3I6ICRjb2xvci13aGl0ZTtcclxuXHJcbiAgICAgICAgICAgICAgICBoNSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICAgICAgICAgICAgICBjb2xvcjokY29sb3ItcHJpbWFyeTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBwIHtcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmU7XHJcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICRjb2xvci13aGl0ZTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAuZGVzY3JpcHRpb24ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICAgICAgICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcclxuICAgICAgICAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDogMTVweDsgICAgIC8qIGZhbGxiYWNrICovXHJcbiAgICAgICAgICAgICAgICAgICAgICAgbWF4LWhlaWdodDogMzJweDsgICAgICAvKiBmYWxsYmFjayAqL1xyXG4gICAgICAgICAgICAgICAgICAgICAgIC13ZWJraXQtbGluZS1jbGFtcDogMjsgLyogbnVtYmVyIG9mIGxpbmVzIHRvIHNob3cgKi9cclxuICAgICAgICAgICAgICAgICAgICAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xyXG4gICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTouOGVtO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgJjpob3ZlciB7XHJcblxyXG4gICAgICAgICAgICAub3ZlcmxheSB7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGg0IHtcclxuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsMTAwJSlcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG5cclxuXHJcbn1cclxuXHJcblxyXG4udmNfY29sLXNtLTMge1xyXG5cclxuICAgIC50ZXh0LWltYWdlLXdyYXBwZXIge1xyXG5cclxuICAgICAgICAudGV4dC1pbWFnZS1ob2xkZXIge1xyXG5cclxuICAgICAgICAgICAgaDQge1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxLjNlbTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG5cclxufVxyXG4iLCJ1bC53eC1kZXRhaWxzIHtcclxuICAgIHdpZHRoOiA3MCU7XHJcbiAgICBcclxuICAgIGxpIHtcclxuICAgICAgICBmb250LXNpemU6IDEuM2VtO1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDUwcHg7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMzBweDtcclxuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgICAgIFxyXG4gICAgICAgIFxyXG4gICAgICAgICY6YmVmb3JlIHtcclxuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgYSB7XHJcbiAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgICAgICAgY29sb3I6ICRjb2xvci1zZWNvbmRhcnk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiRjb2xvci1wcmltYXJ5O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIGkge1xyXG4vLyAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuLy8gICAgICAgICAgICBsZWZ0OiAwO1xyXG4vLyAgICAgICAgICAgIHRvcDogMnB4O1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuMmVtOyBcclxuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAmOjphZnRlciB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICBjbGVhcjogYm90aDtcclxuICAgICAgICAgICAgY29udGVudDogJyc7ICBcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICBcclxuICAgIFxyXG59IFxyXG5cclxuIl19 */
