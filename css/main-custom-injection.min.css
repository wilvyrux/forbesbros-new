body{font-size:14px}ul{list-style:none}a,div,h1,h2,h3,h4,h5,p,ul li{letter-spacing:inherit!important}header.header{border:0}header.header.headroom.headroom--not-top{background:rgba(0,0,0,.9)}.copyright__list li{padding:15px}.copyright__list{display:-ms-flexbox!important;display:flex!important;-ms-flex-wrap:wrap!important;flex-wrap:wrap!important;-ms-flex-align:center;align-items:center;-ms-flex-pack:center!important;justify-content:center!important}.site-footer .footer-column{max-width:100%;-ms-flex:0 0 100%;flex:0 0 100%;text-align:center}.site-footer .footer-column .widget_nav_menu .menu{display:-ms-flexbox!important;display:flex!important;-ms-flex-wrap:wrap!important;flex-wrap:wrap!important;-ms-flex-align:center;align-items:center;-ms-flex-pack:center!important;justify-content:center!important}.site-footer .footer-column .widget_nav_menu .menu li{padding:10px}.fp-taxonomy-wrapper,.project-taxonomy{display:-ms-flexbox!important;display:flex!important;-ms-flex-wrap:wrap!important;flex-wrap:wrap!important;-ms-flex-align:center;align-items:center;-ms-flex-pack:center!important;justify-content:center!important}.fp-taxonomy-wrapper .fpt-holder,.project-taxonomy .fpt-holder{padding:10px}.fp-taxonomy-wrapper .fpt-holder img,.project-taxonomy .fpt-holder img{width:40px;margin-right:6px}.fp-wrapper{display:-ms-flexbox!important;display:flex!important;-ms-flex-wrap:wrap!important;flex-wrap:wrap!important;-ms-flex-align:center;align-items:center;-ms-flex-pack:center!important;justify-content:center!important;margin:50px 0}.fp-wrapper .fp-inner-holder{width:25%}.forbes-project__items{height:200px;overflow:hidden;padding:10px;background-size:cover!important}.forbes-project__items,.forbes-project__items a{display:-ms-flexbox!important;display:flex!important;-ms-flex-wrap:wrap!important;flex-wrap:wrap!important;-ms-flex-align:flex-end;align-items:flex-end}.forbes-project__items a{width:100%;font-size:.9em;padding:20px;text-align:left}.dwqa-breadcrumbs{background:#262626!important}.dwqa-breadcrumbs a{padding:10px;display:inline-block;color:#fff}.dwqa-breadcrumbs .dwqa-current,h2.vc_custom_heading{color:#f36a22!important}h2.vc_custom_heading{padding-bottom:10px;font-size:3em;text-transform:uppercase!important;font-weight:700}.wx-button.align-left,.wx-heading.align-left{text-align:left}.wx-button.align-center,.wx-heading.align-center{text-align:center}.wx-button.align-right,.wx-heading.align-right{text-align:right}.wx-heading{text-decoration:none!important;display:block;margin-top:15px;margin-bottom:55px}@media only screen and (max-width:1000px){.wx-heading{margin-bottom:10px}}.wx-heading .image{width:200px;margin:auto}.wx-heading .fourth-heading,.wx-heading .primary-heading,.wx-heading .secondary-heading,.wx-heading .third-heading{display:inline-block;margin:0;text-transform:uppercase;font-family:Oswald,sans-serif!important;position:relative}.wx-heading .primary-heading{font-size:3em;text-transform:uppercase;margin-bottom:15px;padding-bottom:15px}.wx-heading .primary-heading:after{width:300px;position:absolute;content:"";left:0;bottom:0;height:2px;display:block;background:#fff!important}.wx-heading .secondary-heading{font-size:2.5em;text-transform:uppercase;font-weight:500;color:#f36a22!important}.wx-heading .secondary-heading:before{display:none}.wx-heading .third-heading{font-size:1.3em;text-transform:capitalize;font-weight:500;color:#fff!important;font-family:Roboto,sans-serif!important}.wx-heading .fourth-heading{color:#fff!important;font-size:3.5em;margin-bottom:25px}.wx-heading .heading-subtitle,.wx-heading p{width:80%;margin:auto;font-weight:300;font-style:italic;font-size:1.1em}.wx-heading .image img{margin-top:10px;margin-bottom:20px}.no-subtitle .heading-subtitle,.no-subtitle p{display:none}.wx-heading.align-left .heading-subtitle{text-align:left;width:100%;font-size:1.3em;letter-spacing:inherit;text-transform:capitalize;font-family:Roboto,sans-serif!important;font-style:normal;line-height:24px}.with-subtitle .heading-subtitle,.with-subtitle p{display:none}@media only screen and (max-width:800px){.wx-heading .fourth-heading,.wx-heading .primary-heading,.wx-heading .secondary-heading,.wx-heading .third-heading{font-size:1.5em!important;margin-bottom:10px}}.wx-button.primary-button{color:#fff!important;background:#f36a22!important;border-radius:100px;-moz-border-radius:100px;display:inline-block;padding:10px 30px;text-decoration:none;display:block;width:80%;margin:auto;text-transform:uppercase;text-align:center;margin-bottom:20px}.wx-button.primary-button p{margin:0;font-weight:700;color:#fff!important}.wx-button.primary-button:hover{opacity:.3}.wx-button.secondary-button{border:transparent;font-weight:700;padding:15px 20px;border-radius:5px;-moz-border-radius:5px}.wx-button.secondary-button:before{content:"\f095";margin-right:10px;display:inline-block;font:normal normal normal 14px/1 FontAwesome;font-size:inherit;text-rendering:auto;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-size:1.3em}.wx-button.third-button{color:#fff!important;background:#f36a22!important;display:inline-block;padding:5px 10px}.wx-button.third-button p{display:inline-block;margin:0}.wx-button.third-button:after{content:"\f178";margin-left:5px;display:inline-block;font:normal normal normal 14px/1 FontAwesome;font-size:inherit;text-rendering:auto;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.wx-button.third-button:hover{opacity:.6;transform:translate(15%);-moz-transform:translate(15%);-webkit-transform:translate(15%);-o-transform:translate(15%)}.text-image-wrapper{margin-bottom:25px;position:relative;overflow:hidden}.text-image-wrapper .text-image-holder{position:relative;transition:all .3s ease}.text-image-wrapper .text-image-holder:before{width:100%;height:100px;background:linear-gradient(180deg,transparent 0,rgba(0,0,0,.32) 48%,rgba(0,0,0,.65) 98%,rgba(0,0,0,.65));filter:progid:DXImageTransform.Microsoft.gradient(startColorstr="#00000000",endColorstr="#a6000000",GradientType=0);position:absolute;bottom:0;left:0;content:""}.text-image-wrapper .text-image-holder img{width:100%}.text-image-wrapper .text-image-holder h4{position:absolute;bottom:0;width:100%;left:0;margin:0;padding:20px;text-transform:uppercase;color:#fff!important;font-size:1.875em;transition:all 1s ease;font-weight:500;font-family:Oswald,sans-serif!important}.text-image-wrapper .text-image-holder .overlay{position:absolute;left:0;top:0;width:100%;height:100%;background:rgba(0,0,0,.8);transition:all .3s ease;opacity:0}.text-image-wrapper .text-image-holder .overlay .overlay-holder{width:80%;position:absolute;top:0;height:75px;bottom:0;margin:auto;left:0;right:0;text-align:center;color:#fff!important}.text-image-wrapper .text-image-holder .overlay .overlay-holder h5{text-transform:uppercase;color:#f36a22!important}.text-image-wrapper .text-image-holder .overlay .overlay-holder p{display:inline;color:#fff!important}.text-image-wrapper .text-image-holder .overlay .overlay-holder .description{overflow:hidden;text-overflow:ellipsis;display:-webkit-box;line-height:15px;max-height:32px;-webkit-line-clamp:2;font-size:.8em}.text-image-wrapper .text-image-holder:hover .overlay{display:block;opacity:1}.text-image-wrapper .text-image-holder:hover h4{transform:translateY(100%)}.vc_col-sm-3 .text-image-wrapper .text-image-holder h4{font-size:1.3em}ul.wx-details{width:70%}ul.wx-details li{font-size:1.3em;position:relative;padding-left:50px;margin-bottom:30px;vertical-align:middle}ul.wx-details li:before{display:none}ul.wx-details li a{text-decoration:none;color:#262626!important}ul.wx-details li a:hover{color:#f36a22!important}ul.wx-details li i{font-size:1.2em;display:inline-block}ul.wx-details li:after{display:block;clear:both;content:""}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnRpYWxzL19yZXNldHMuc2NzcyIsInBhcnRpYWxzL19oZWFkZXIuc2NzcyIsIm1vZHVsZXMvX21peGluLnNjc3MiLCJwYXJ0aWFscy9fZm9vdGVyLnNjc3MiLCJwYXJ0aWFscy9fcGFnZXMuc2NzcyIsInBhcnRpYWxzL19icmVhZGNydW1icy5zY3NzIiwibW9kdWxlcy9fY29sb3JzLnNjc3MiLCJwYXJ0aWFscy9faGVhZGluZ3Muc2NzcyIsInBhcnRpYWxzL3d4LXNob3J0Y29kZS9fYWxsd3hzaG9ydGNvZGVzLnNjc3MiLCJwYXJ0aWFscy93eC1zaG9ydGNvZGUvX2hlYWRpbmdzLnNjc3MiLCJtb2R1bGVzL190eXBvZ3JhcGh5LnNjc3MiLCJwYXJ0aWFscy93eC1zaG9ydGNvZGUvX2J1dHRvbnMuc2NzcyIsInBhcnRpYWxzL3d4LXNob3J0Y29kZS9fdGh1bWJuYWlsd3RleHQuc2NzcyIsInBhcnRpYWxzL3d4LXNob3J0Y29kZS9fZGV0YWlscy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLEtBRUksY0FBZSxDQUNsQixBQUVELEdBQ0ksZUFBZ0IsQ0FDbkIsQUFFRCw2QkFVSSxnQ0FBa0MsQ0FDckMsQUNwQkQsY0FFUSxRQUFTLENBUVosQUFWTCx5Q0NhSSx5QkFBbUMsQ0ROdEIsQUVQakIsb0JBQ0ksWUFBYSxDQUNoQixBQUdHLGlCRCtGQSw4QkFBK0IsQUFDL0IsdUJBQXdCLEFBQ3hCLDZCQUE4QixBQUM5Qix5QkFBMEIsQUFXMUIsc0JDM0dvQyxBRDRHcEMsbUJDNUdvQyxBRHFHcEMsK0JBQTRCLEFBQzVCLGdDQUE4QixDQ3BHN0IsQUFHTCw0QkFFUSxlQUFlLEFBQ2Ysa0JBQWMsQUFBZCxjQUFjLEFBQ2QsaUJBQWtCLENBV3JCLEFBZkwsbUREd0ZJLDhCQUErQixBQUMvQix1QkFBd0IsQUFDeEIsNkJBQThCLEFBQzlCLHlCQUEwQixBQVcxQixzQkM5RjRDLEFEK0Y1QyxtQkMvRjRDLEFEd0Y1QywrQkFBNEIsQUFDNUIsZ0NBQThC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bGUiOiJtYWluLWN1c3RvbS1pbmplY3Rpb24uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYm9keSB7XHJcbiAgICAvLyBmb250LWZhbWlseTogJGZvbnQtc2Vjb25kYXJ5O1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG59XHJcblxyXG51bCB7XHJcbiAgICBsaXN0LXN0eWxlOiBub25lO1xyXG59XHJcblxyXG5oMSxcclxuaDIsXHJcbmgzLFxyXG5oNCxcclxuaDUsXHJcbnAsXHJcbmRpdixcclxudWwgbGksXHJcbmEge1xyXG4gICAgLy8gICAgZm9udC1mYW1pbHk6ICRmb250LXNlY29uZGFyeTtcclxuICAgIGxldHRlci1zcGFjaW5nOiBpbmhlcml0ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi8vICoge1xyXG4vLyAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbiguM3MpO1xyXG4vLyB9IiwiaGVhZGVyIHtcclxuICAgICYuaGVhZGVyIHtcclxuICAgICAgICBib3JkZXI6IDA7XHJcbiAgICAgICAgJi5oZWFkcm9vbSB7XHJcbiAgICAgICAgICAgICYuaGVhZHJvb20ge1xyXG4gICAgICAgICAgICAgICAgJi0tbm90LXRvcCB7XHJcbiAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgdC1ibGFjayguOSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCJAbWl4aW4gYm9yZGVyLXJhZGl1cygkdmFsdWU6NXB4KSB7XHJcbiAgICAtd2Via2l0LWJvcmRlci1yYWRpdXM6ICR2YWx1ZTtcclxuICAgIGJvcmRlci1yYWRpdXM6ICR2YWx1ZTtcclxuICAgIC1tb3otYm9yZGVyLXJhZGl1czogJHZhbHVlO1xyXG59XHJcblxyXG5AbWl4aW4gbm9iYWNrZ3JvdW5kIHtcclxuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4vL0JBQ0tHUk9VTkQgUkdCQSBDT0xPUlNcclxuQG1peGluIHQtYmxhY2soJG9wYWNpdHk6LjYpIHtcclxuICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgJG9wYWNpdHkpO1xyXG59XHJcblxyXG5AbWl4aW4gdC13aGl0ZSgkb3BhY2l0eTouOSkge1xyXG4gICAgYmFja2dyb3VuZDogcmdiYSgyNTYsIDI1NiwgMjU2LCAkb3BhY2l0eSk7XHJcbn1cclxuXHJcbkBtaXhpbiB0LWNvbG9yKCR2YWx1ZTE6MCwgJHZhbHVlMjowLCAkdmFsdWUzOjAsICRvcGFjaXR5Oi44KSB7XHJcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKCR2YWx1ZTEsICR2YWx1ZTIsICR2YWx1ZTMsICRvcGFjaXR5KTtcclxufVxyXG5cclxuQG1peGluIHNoYWRvdyB7XHJcbiAgICAtd2Via2l0LWJveC1zaGFkb3c6IDFweCAxcHggNXB4IDFweCByZ2JhKDAsIDAsIDAsIC4yKTtcclxuICAgIGJveC1zaGFkb3c6IDFweCAxcHggNXB4IDFweCByZ2JhKDAsIDAsIDAsIC4yKTtcclxufVxyXG5cclxuQG1peGluIG5vc2hhZG93IHtcclxuICAgIC13ZWJraXQtYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xyXG4gICAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG5AbWl4aW4gdHJhbnNpdGlvbigkdGltZSkge1xyXG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgJHRpbWUgZWFzZTtcclxuICAgIC1tb3otdHJhbnNpdGlvbjogYWxsICR0aW1lIGVhc2U7XHJcbiAgICAtbXMtdHJhbnNpdGlvbjogYWxsICR0aW1lIGVhc2U7XHJcbiAgICAtby10cmFuc2l0aW9uOiBhbGwgJHRpbWUgZWFzZTtcclxuICAgIHRyYW5zaXRpb246IGFsbCAkdGltZSBlYXNlO1xyXG59XHJcblxyXG5AbWl4aW4gZmxvYXRpbmcoJHBvc2l0aW9uOmFic29sdXRlLCAkdG9wOjAsICRsZWZ0OjAsICRyaWdodDowLCAkYm90dG9tOjApIHtcclxuICAgIHBvc2l0aW9uOiAkcG9zaXRpb24gIWltcG9ydGFudDtcclxuICAgIHRvcDogJHRvcCAhaW1wb3J0YW50O1xyXG4gICAgbGVmdDogJGxlZnQgIWltcG9ydGFudDtcclxuICAgIHJpZ2h0OiAkcmlnaHQgIWltcG9ydGFudDtcclxuICAgIGJvdHRvbTogJGJvdHRvbSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG5AbWl4aW4gdHJhbnNmb3JtX3RyYW5zbGF0ZSgkeCwgJHkpIHtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKCR4LCAkeSk7XHJcbiAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlKCR4LCAkeSk7XHJcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlKCR4LCAkeSk7XHJcbiAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZSgkeCwgJHkpO1xyXG59XHJcblxyXG5AbWl4aW4gdHJhbnNmb3JtX3NjYWxlKCR4LCAkeSkge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgkeCwgJHkpO1xyXG4gICAgLW1vei10cmFuc2Zvcm06IHNjYWxlKCR4LCAkeSk7XHJcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoJHgsICR5KTtcclxuICAgIC1vLXRyYW5zZm9ybTogc2NhbGUoJHgsICR5KTtcclxufVxyXG5cclxuQG1peGluIGJvcmRlcigkdmFsdWU6MXB4LCAkc3R5bGU6c29saWQsICRjb2xvcjokY29sb3ItYmxhY2spIHtcclxuICAgIGJvcmRlcjogJHZhbHVlICRzdHlsZSAkY29sb3I7XHJcbn1cclxuXHJcbkBtaXhpbiByLW1hcmdpbiB7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG59XHJcblxyXG5AbWl4aW4gYWJzb2x1dGUge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG5AbWl4aW4gZml4ZWQge1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG5AbWl4aW4gZm9udGF3ZXNvbWUge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgZm9udDogbm9ybWFsIG5vcm1hbCBub3JtYWwgMTRweC8xIEZvbnRBd2Vzb21lO1xyXG4gICAgZm9udC1zaXplOiBpbmhlcml0O1xyXG4gICAgdGV4dC1yZW5kZXJpbmc6IGF1dG87XHJcbiAgICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcclxuICAgIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XHJcbn1cclxuXHJcbkBtaXhpbiBmbGV4IHtcclxuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94ICFpbXBvcnRhbnQ7XHJcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveCAhaW1wb3J0YW50O1xyXG4gICAgZGlzcGxheTogZmxleCAhaW1wb3J0YW50O1xyXG4gICAgLW1zLWZsZXgtd3JhcDogd3JhcCAhaW1wb3J0YW50O1xyXG4gICAgZmxleC13cmFwOiB3cmFwICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbkBtaXhpbiBmbGV4LWp1c3RpZnktY29udGVudCgkYTpjZW50ZXIpIHtcclxuICAgIC13ZWJraXQtYm94LXBhY2s6ICRhICFpbXBvcnRhbnQ7XHJcbiAgICAtbXMtZmxleC1wYWNrOiAkYSAhaW1wb3J0YW50O1xyXG4gICAganVzdGlmeS1jb250ZW50OiAkYSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG5AbWl4aW4gZmxleC1hbGlnbi1pdGVtcygkYTpjZW50ZXIpIHtcclxuICAgIC13ZWJraXQtYm94LWFsaWduOiAkYTtcclxuICAgIC1tcy1mbGV4LWFsaWduOiAkYTtcclxuICAgIGFsaWduLWl0ZW1zOiAkYTtcclxufVxyXG5cclxuQG1peGluIGZsZXgtY29sdW1uKCkge1xyXG4gICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcclxuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xyXG4gICAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG59IiwiLmNvcHlyaWdodF9fbGlzdCBsaSB7XHJcbiAgICBwYWRkaW5nOiAxNXB4O1xyXG59XHJcblxyXG4uY29weXJpZ2h0IHtcclxuICAgICZfX2xpc3Qge1xyXG4gICAgICAgIEBpbmNsdWRlIGZsZXg7XHJcbiAgICAgICAgQGluY2x1ZGUgZmxleC1hbGlnbi1pdGVtcyhjZW50ZXIpO1xyXG4gICAgICAgIEBpbmNsdWRlIGZsZXgtanVzdGlmeS1jb250ZW50KGNlbnRlcik7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5zaXRlLWZvb3RlciB7XHJcbiAgICAuZm9vdGVyLWNvbHVtbiB7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGZsZXg6IDAgMCAxMDAlO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAud2lkZ2V0X25hdl9tZW51IHtcclxuICAgICAgICAgICAgLm1lbnUge1xyXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgZmxleDtcclxuICAgICAgICAgICAgICAgIEBpbmNsdWRlIGZsZXgtYWxpZ24taXRlbXMoY2VudGVyKTtcclxuICAgICAgICAgICAgICAgIEBpbmNsdWRlIGZsZXgtanVzdGlmeS1jb250ZW50KGNlbnRlcik7XHJcbiAgICAgICAgICAgICAgICBsaSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMTBweDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsIi5wcm9qZWN0LXRheG9ub215LFxyXG4uZnAtdGF4b25vbXktd3JhcHBlciB7XHJcbiAgICBAaW5jbHVkZSBmbGV4O1xyXG4gICAgQGluY2x1ZGUgZmxleC1hbGlnbi1pdGVtcyhjZW50ZXIpO1xyXG4gICAgQGluY2x1ZGUgZmxleC1qdXN0aWZ5LWNvbnRlbnQoY2VudGVyKTtcclxuICAgIC5mcHQtaG9sZGVyIHtcclxuICAgICAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgICAgIGltZyB7XHJcbiAgICAgICAgICAgIHdpZHRoOiA0MHB4O1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDZweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi5mcC13cmFwcGVyIHtcclxuICAgIEBpbmNsdWRlIGZsZXg7XHJcbiAgICBAaW5jbHVkZSBmbGV4LWFsaWduLWl0ZW1zKGNlbnRlcik7XHJcbiAgICBAaW5jbHVkZSBmbGV4LWp1c3RpZnktY29udGVudChjZW50ZXIpO1xyXG4gICAgbWFyZ2luOiA1MHB4IDA7XHJcbiAgICAuZnAtaW5uZXItaG9sZGVyIHtcclxuICAgICAgICB3aWR0aDogY2FsYygxMDAlLzQpO1xyXG4gICAgfVxyXG59XHJcblxyXG4uZm9yYmVzLXByb2plY3Qge1xyXG4gICAgJl9faXRlbXMge1xyXG4gICAgICAgIGhlaWdodDogMjAwcHg7XHJcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICBAaW5jbHVkZSBmbGV4O1xyXG4gICAgICAgIEBpbmNsdWRlIGZsZXgtYWxpZ24taXRlbXMoZmxleC1lbmQpO1xyXG4gICAgICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlciAhaW1wb3J0YW50O1xyXG4gICAgICAgIGEge1xyXG4gICAgICAgICAgICBAaW5jbHVkZSBmbGV4O1xyXG4gICAgICAgICAgICBAaW5jbHVkZSBmbGV4LWFsaWduLWl0ZW1zKGZsZXgtZW5kKTtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogLjllbTtcclxuICAgICAgICAgICAgcGFkZGluZzogMjBweDtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCIuZHdxYS1icmVhZGNydW1icyB7XHJcbiAgICBiYWNrZ3JvdW5kOiAkY29sb3Itc2Vjb25kYXJ5O1xyXG4gICAgXHJcbiAgICBhIHtcclxuICAgICAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICBcclxuICAgIH1cclxuICAgIFxyXG4gICAgLmR3cWEtY3VycmVudCB7XHJcbiAgICAgICAgY29sb3I6ICRjb2xvci1wcmltYXJ5O1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBcclxufSIsIlxyXG4vL0NPTU1PTiBDT0xPUlNcclxuJGNvbG9yLWRhcms6IzE4MTcxOCAhaW1wb3J0YW50OyBcclxuJGNvbG9yLWdyYXkyOiMyODI4MjggIWltcG9ydGFudDsgXHJcbiRjb2xvci1ibGFjazojMDAwMDAwICFpbXBvcnRhbnQ7IFxyXG5cclxuXHJcbi8vVEhFTUUgVVNFIENPTE9SU1xyXG4kY29sb3ItZGFya2JsdWU6IzBhMzU3OCAhaW1wb3J0YW50OyBcclxuJGNvbG9yLWdyZWVuOiMwM2I4NDAgIWltcG9ydGFudDsgXHJcbiRjb2xvci1ncmF5OiM3Nzc0NzQgIWltcG9ydGFudDsgXHJcblxyXG4kY29sb3IteWVsbG93OiNmOGMxMDQgIWltcG9ydGFudDsgXHJcbiRjb2xvci1yZWQ6I2YyMWIxYiAhaW1wb3J0YW50OyBcclxuXHJcblxyXG4kY29sb3ItYmx1ZTojMDE3M2JjICFpbXBvcnRhbnQ7IFxyXG5cclxuJGNvbG9yLXdoaXRlOiNmZmYgIWltcG9ydGFudDsgXHJcblxyXG4kY29sb3ItbGlnaHRncmF5OiNlYmViZWIgIWltcG9ydGFudDsgXHJcbiRjb2xvci1saWdodGdyYXkyOiNmYmZhZmEgIWltcG9ydGFudDsgXHJcbiRjb2xvci1saWdodGdyYXkzOiNkZGQgIWltcG9ydGFudDsgXHJcblxyXG5cclxuJGNvbG9yLWRhcms6IzI2MjYyNiAhaW1wb3J0YW50OyBcclxuJGNvbG9yLW9yYW5nZTojZjM2YTIyICFpbXBvcnRhbnQ7IFxyXG4kY29sb3ItZGFya29yYW5nZTojYjc0NjBiICFpbXBvcnRhbnQ7IFxyXG5cclxuJGNvbG9yLXByaW1hcnk6JGNvbG9yLW9yYW5nZTsgXHJcbiRjb2xvci1zZWNvbmRhcnk6JGNvbG9yLWRhcms7IFxyXG4kY29sb3ItdGhpcmQ6JGNvbG9yLXdoaXRlOyAgICBcclxuIiwiaDIudmNfY3VzdG9tX2hlYWRpbmcge1xyXG4gICAgY29sb3I6ICRjb2xvci1vcmFuZ2U7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcclxuICAgIGZvbnQtc2l6ZTogM2VtO1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZSAhaW1wb3J0YW50O1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn0iLCJcclxuXHJcbi8vY2VudGVyIHNob3J0Y29kZXNcclxuLnd4LWhlYWRpbmcuYWxpZ24tbGVmdCxcclxuLnd4LWJ1dHRvbi5hbGlnbi1sZWZ0IFxyXG57XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG59IFxyXG5cclxuLnd4LWhlYWRpbmcuYWxpZ24tY2VudGVyLCBcclxuLnd4LWJ1dHRvbi5hbGlnbi1jZW50ZXIgXHJcbntcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufSBcclxuXHJcbi53eC1oZWFkaW5nLmFsaWduLXJpZ2h0LFxyXG4ud3gtYnV0dG9uLmFsaWduLXJpZ2h0IFxyXG57XHJcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcclxufSBcclxuXHJcbi8vZm9udCB1c2VkXHJcbiRmb250LXNlbGVjdDokZm9udC1wcmltYXJ5O1xyXG5cclxuXHJcblxyXG4vL1JFU1BPTlNJVkUgU0laRSBTVEFSVFMgSEVSRVxyXG5AaW1wb3J0IFwiaGVhZGluZ3NcIjtcclxuQGltcG9ydCBcImJ1dHRvbnNcIjsgXHJcbkBpbXBvcnQgXCJ0aHVtYm5haWx3dGV4dFwiOyAgIFxyXG5AaW1wb3J0IFwiZGV0YWlsc1wiOyAgICAgXHJcbiBcclxuXHJcblxyXG4iLCJcclxuLy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcbi8vSEVBRElOR1NcclxuLy8qKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcblxyXG4vL0hFQURJTkcgU1RZTEUgMVxyXG4ud3gtaGVhZGluZyB7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmUgIWltcG9ydGFudDtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbWFyZ2luLXRvcDogMTVweDtcclxuICAgIC8vIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1NXB4O1xyXG5cclxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAwMHB4KSB7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIC5pbWFnZSB7XHJcbiAgICAgICAgd2lkdGg6IDIwMHB4O1xyXG4gICAgICAgIG1hcmdpbjogYXV0bztcclxuICAgIH1cclxuXHJcbiAgICAucHJpbWFyeS1oZWFkaW5nLFxyXG4gICAgLnNlY29uZGFyeS1oZWFkaW5nLFxyXG4gICAgLnRoaXJkLWhlYWRpbmcsXHJcbiAgICAuZm91cnRoLWhlYWRpbmdcclxuICAgIHtcclxuXHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4vLyAgICAgICAgZm9udC1zaXplOjMuMDYzZW07XHJcbiAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6ICRmb250LXByaW1hcnk7XHJcbiAgICAgICAgLy8gICAgICAgIGNvbG9yOiAkY29sb3ItZGFyaztcclxuLy8gICAgICAgIGZvbnQtd2VpZ2h0OiAkYm9sZDtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG4gICAgICAgIC8vICY6OmJlZm9yZSB7XHJcbiAgICAgICAgLy8gICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgIC8vICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgLy8gICAgIGhlaWdodDogMjFweDtcclxuICAgICAgICAvLyAgICAgd2lkdGg6IDExNHB4O1xyXG4gICAgICAgIC8vICAgICBib3R0b206IC0yNXB4O1xyXG4gICAgICAgIC8vICAgICBtYXJnaW4tcmlnaHQ6IDE1cHg7XHJcbiAgICAgICAgLy8gICAgIC8qIG1hcmdpbi1ib3R0b206IC0yMHB4OyAqL1xyXG4gICAgICAgIC8vICAgICBtYXJnaW46IGF1dG8gIWltcG9ydGFudDtcclxuXHJcbiAgICAgICAgLy8gICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgIC8vICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIC8vICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcblxyXG4gICAgICAgIC8vIH1cclxuXHJcblxyXG5cclxuICAgIH1cclxuXHJcblxyXG5cclxuXHJcbiAgICAucHJpbWFyeS1oZWFkaW5nIHtcclxuICAgICAgICBmb250LXNpemU6IDNlbTtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDE1cHg7XHJcblxyXG5cclxuICAgICAgICAmOjphZnRlciB7XHJcbiAgICAgICAgICAgIHdpZHRoOjMwMHB4O1xyXG4gICAgICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcclxuICAgICAgICAgICAgY29udGVudDonJztcclxuICAgICAgICAgICAgbGVmdDowO1xyXG4gICAgICAgICAgICBib3R0b206MDtcclxuICAgICAgICAgICAgaGVpZ2h0OjJweDtcclxuICAgICAgICAgICAgZGlzcGxheTpibG9jazsgXHJcbiAgICAgICAgICAgIGJhY2tncm91bmQ6JGNvbG9yLXdoaXRlO1xyXG4gICAgICAgIH1cclxuXHJcblxyXG4vLyAgICAgICAgJjo6YmVmb3JlIHtcclxuLy8gICAgICAgICAgICAgYmFja2dyb3VuZDogdXJsKCcuLi9jdXN0b20tcGhwL3Nwcml0ZS5qcGcnKW5vLXJlcGVhdDtcclxuLy8gICAgICAgIH1cclxuICAgIH1cclxuXHJcblxyXG4gICAgLnNlY29uZGFyeS1oZWFkaW5nIHtcclxuICAgICAgICBmb250LXNpemU6IDIuNWVtO1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6ICRtZWRpdW07XHJcbiAgICAgICAgY29sb3I6ICRjb2xvci1wcmltYXJ5O1xyXG5cclxuXHJcbiAgICAgICAgJjo6YmVmb3JlIHtcclxuICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAudGhpcmQtaGVhZGluZyB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjNlbTtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcclxuICAgICAgICBmb250LXdlaWdodDogJG1lZGl1bTtcclxuICAgICAgICBjb2xvcjogJGNvbG9yLXdoaXRlO1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiAkZm9udC1zZWNvbmRhcnk7XHJcblxyXG4gICAgfVxyXG5cclxuXHJcbiAgICAuZm91cnRoLWhlYWRpbmcge1xyXG4gICAgICAgIGNvbG9yOiAkY29sb3Itd2hpdGU7XHJcbiAgICAgICAgZm9udC1zaXplOiAzLjVlbTtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAyNXB4O1xyXG5cclxuXHJcbiAgICB9XHJcblxyXG5cclxuICAgIC5oZWFkaW5nLXN1YnRpdGxlLHAge1xyXG4gICAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICAgICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiAkbGlnaHQ7XHJcbiAgICAgICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS4xZW07XHJcbiAgICB9XHJcblxyXG4gICAgLmltYWdlIHtcclxuICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcblxyXG5cclxufVxyXG5cclxuLm5vLXN1YnRpdGxlIHtcclxuICAgIC5oZWFkaW5nLXN1YnRpdGxlLHAge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG59XHJcblxyXG5cclxuLnd4LWhlYWRpbmcuYWxpZ24tbGVmdCB7XHJcbiAgICAuaGVhZGluZy1zdWJ0aXRsZSB7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBmb250LXNpemU6IDEuM2VtO1xyXG4vLyAgICAgICAgZm9udC13ZWlnaHQ6ICRib2xkO1xyXG4gICAgICAgIGxldHRlci1zcGFjaW5nOiBpbmhlcml0O1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiAkZm9udC1zZWNvbmRhcnk7XHJcbiAgICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAyNHB4O1xyXG4gICAgfVxyXG59XHJcblxyXG4ud2l0aC1zdWJ0aXRsZSB7XHJcbiAgICAuaGVhZGluZy1zdWJ0aXRsZSxwe1xyXG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5cclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjgwMHB4KSB7XHJcblxyXG4gICAgICAgICAud3gtaGVhZGluZyB7XHJcbiAgICAgICAgICAgICAgICAucHJpbWFyeS1oZWFkaW5nLFxyXG4gICAgICAgICAgICAgICAgLnNlY29uZGFyeS1oZWFkaW5nLFxyXG4gICAgICAgICAgICAgICAgLnRoaXJkLWhlYWRpbmcsXHJcbiAgICAgICAgICAgICAgICAuZm91cnRoLWhlYWRpbmdcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuNWVtICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgfVxyXG5cclxuXHJcbiAgICB9XHJcbiIsIiRmb250LXByaW1hcnk6J09zd2FsZCcsIHNhbnMtc2VyaWYgIWltcG9ydGFudDsgXHJcbiRmb250LXNlY29uZGFyeTonUm9ib3RvJywgc2Fucy1zZXJpZiAhaW1wb3J0YW50O1xyXG4kZm9udC10aGlyZDonT3BlbiBTYW5zJywgc2Fucy1zZXJpZiAhaW1wb3J0YW50O1xyXG5cclxuXHJcbi8vRk9OVCBXRUlHSFQgXHJcbiRsaWdodDozMDA7XHJcbiRtZWRpdW06NTAwO1xyXG4kcmVndWxhcjo0MDA7XHJcbiRib2xkOjcwMDsgXHJcbiRzZW1pYm9sZDo2MDA7XHJcblxyXG4iLCJcclxuXHJcbi8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG4vL0JVVFRPTlMgXHJcbi8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuLy9CVVRUT05TIFNUWUxFIDEgXHJcblxyXG5cclxuLnd4LWJ1dHRvbi5wcmltYXJ5LWJ1dHRvbiB7XHJcbiAgICAgICAgY29sb3I6ICRjb2xvci13aGl0ZTtcclxuICAgICAgICBiYWNrZ3JvdW5kOiAkY29sb3ItcHJpbWFyeTtcclxuICAgICAgICBAaW5jbHVkZSBib3JkZXItcmFkaXVzKDEwMHB4KTtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgcGFkZGluZzogMTBweCAzMHB4O1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICB3aWR0aDogODAlO1xyXG4gICAgICAgIG1hcmdpbjogYXV0bztcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOjIwcHg7XHJcbiAgICBcclxuICAgICAgICBwIHtcclxuICAgICAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogJGJvbGQ7XHJcbiAgICAgICAgICAgICBjb2xvcjogJGNvbG9yLXdoaXRlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgb3BhY2l0eTogLjM7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgfVxyXG5cclxuLnd4LWJ1dHRvbi5zZWNvbmRhcnktYnV0dG9uIHtcclxuICAgICAgICBib3JkZXI6dHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6ICRib2xkO1xyXG4gICAgICAgIHBhZGRpbmc6IDE1cHggMjBweDtcclxuICAgICAgICBAaW5jbHVkZSBib3JkZXItcmFkaXVzKDVweCk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgJjo6YmVmb3JlIHtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXFxmMDk1XCI7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxuICAgICAgICAgICAgQGluY2x1ZGUgZm9udGF3ZXNvbWU7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZToxLjNlbTsgXHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgXHJcbiAgICAgICAgXHJcbn1cclxuICAgIFxyXG4gICAgICAgXHJcbiAgICBcclxuLnd4LWJ1dHRvbi50aGlyZC1idXR0b24ge1xyXG4gICAgY29sb3I6ICRjb2xvci13aGl0ZTtcclxuICAgIGJhY2tncm91bmQ6ICRjb2xvci1wcmltYXJ5O1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgcGFkZGluZzogNXB4IDEwcHg7XHJcbiAgICAgICAgXHJcbiAgICBwIHtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgfVxyXG4gICAgIFxyXG4gICAgICAgIFxyXG4gICAgJjo6YWZ0ZXIgeyBcclxuICAgICAgICBjb250ZW50OiBcIlxcZjE3OFwiO1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiA1cHg7XHJcbiAgICAgICAgQGluY2x1ZGUgZm9udGF3ZXNvbWU7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICY6aG92ZXIge1xyXG4gICAgICAgIG9wYWNpdHk6IC42O1xyXG4gICAgICAgIEBpbmNsdWRlIHRyYW5zZm9ybV90cmFuc2xhdGUoMTUlLDApO1xyXG4gICAgfVxyXG4gICAgICAgIFxyXG59XHJcblxyXG5cclxuXHJcblxyXG4iLCJAbWl4aW4gY29sb3ItZ3JhZGllbnQge1xyXG4vKiBQZXJtYWxpbmsgLSB1c2UgdG8gZWRpdCBhbmQgc2hhcmUgdGhpcyBncmFkaWVudDogaHR0cDovL2NvbG9yemlsbGEuY29tL2dyYWRpZW50LWVkaXRvci8jMDAwMDAwKzQ4LDAwMDAwMCsxMDAmMCswLDAuNjUrOTggKi9cclxuYmFja2dyb3VuZDogLW1vei1saW5lYXItZ3JhZGllbnQodG9wLCAgcmdiYSgwLDAsMCwwKSAwJSwgcmdiYSgwLDAsMCwwLjMyKSA0OCUsIHJnYmEoMCwwLDAsMC42NSkgOTglLCByZ2JhKDAsMCwwLDAuNjUpIDEwMCUpOyAvKiBGRjMuNi0xNSAqL1xyXG5iYWNrZ3JvdW5kOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsICByZ2JhKDAsMCwwLDApIDAlLHJnYmEoMCwwLDAsMC4zMikgNDglLHJnYmEoMCwwLDAsMC42NSkgOTglLHJnYmEoMCwwLDAsMC42NSkgMTAwJSk7IC8qIENocm9tZTEwLTI1LFNhZmFyaTUuMS02ICovXHJcbmJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sICByZ2JhKDAsMCwwLDApIDAlLHJnYmEoMCwwLDAsMC4zMikgNDglLHJnYmEoMCwwLDAsMC42NSkgOTglLHJnYmEoMCwwLDAsMC42NSkgMTAwJSk7IC8qIFczQywgSUUxMCssIEZGMTYrLCBDaHJvbWUyNissIE9wZXJhMTIrLCBTYWZhcmk3KyAqL1xyXG5maWx0ZXI6IHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5ncmFkaWVudCggc3RhcnRDb2xvcnN0cj0nIzAwMDAwMDAwJywgZW5kQ29sb3JzdHI9JyNhNjAwMDAwMCcsR3JhZGllbnRUeXBlPTAgKTsgLyogSUU2LTkgKi9cclxuXHJcblxyXG59XHJcblxyXG5cclxuLnRleHQtaW1hZ2Utd3JhcHBlciB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyNXB4O1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuXHJcbiAgICAudGV4dC1pbWFnZS1ob2xkZXIge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBAaW5jbHVkZSB0cmFuc2l0aW9uKC4zcyk7XHJcblxyXG5cclxuICAgICAgICAmOjpiZWZvcmUge1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMDBweDtcclxuICAgICAgICAgICAgQGluY2x1ZGUgY29sb3ItZ3JhZGllbnQ7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGltZyB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaDQge1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICAgICAgcGFkZGluZzogMjBweDtcclxuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICAgICAgY29sb3I6ICRjb2xvci13aGl0ZTtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxLjg3NWVtO1xyXG4gICAgICAgICAgICBAaW5jbHVkZSB0cmFuc2l0aW9uKDFzKTtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6ICRtZWRpdW07XHJcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiRmb250LXByaW1hcnk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLm92ZXJsYXkge1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgIHRvcDogMDtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgQGluY2x1ZGUgdC1ibGFjayguOCk7XHJcbi8vICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbiguM3MpO1xyXG4gICAgICAgICAgICBvcGFjaXR5OiAwO1xyXG5cclxuICAgICAgICAgICAgLm92ZXJsYXktaG9sZGVyIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDc1cHg7XHJcbiAgICAgICAgICAgICAgICBib3R0b206IDA7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW46IGF1dG87XHJcbiAgICAgICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogJGNvbG9yLXdoaXRlO1xyXG5cclxuICAgICAgICAgICAgICAgIGg1IHtcclxuICAgICAgICAgICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiRjb2xvci1wcmltYXJ5O1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIHAge1xyXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZTtcclxuICAgICAgICAgICAgICAgICAgICBjb2xvcjogJGNvbG9yLXdoaXRlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIC5kZXNjcmlwdGlvbiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgICAgICAgICAgICAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xyXG4gICAgICAgICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxNXB4OyAgICAgLyogZmFsbGJhY2sgKi9cclxuICAgICAgICAgICAgICAgICAgICAgICBtYXgtaGVpZ2h0OiAzMnB4OyAgICAgIC8qIGZhbGxiYWNrICovXHJcbiAgICAgICAgICAgICAgICAgICAgICAgLXdlYmtpdC1saW5lLWNsYW1wOiAyOyAvKiBudW1iZXIgb2YgbGluZXMgdG8gc2hvdyAqL1xyXG4gICAgICAgICAgICAgICAgICAgICAgIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOi44ZW07XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB9XHJcblxyXG5cclxuICAgICAgICB9XHJcblxyXG5cclxuICAgICAgICAmOmhvdmVyIHtcclxuXHJcbiAgICAgICAgICAgIC5vdmVybGF5IHtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaDQge1xyXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwxMDAlKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcblxyXG5cclxufVxyXG5cclxuXHJcbi52Y19jb2wtc20tMyB7XHJcblxyXG4gICAgLnRleHQtaW1hZ2Utd3JhcHBlciB7XHJcblxyXG4gICAgICAgIC50ZXh0LWltYWdlLWhvbGRlciB7XHJcblxyXG4gICAgICAgICAgICBoNCB7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuM2VtO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG59XHJcbiIsInVsLnd4LWRldGFpbHMge1xyXG4gICAgd2lkdGg6IDcwJTtcclxuICAgIFxyXG4gICAgbGkge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS4zZW07XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHBhZGRpbmctbGVmdDogNTBweDtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgICAgICAgXHJcbiAgICAgICAgXHJcbiAgICAgICAgJjpiZWZvcmUge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBhIHtcclxuICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgICAgICBjb2xvcjogJGNvbG9yLXNlY29uZGFyeTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICAgICAgY29sb3I6JGNvbG9yLXByaW1hcnk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgaSB7XHJcbi8vICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4vLyAgICAgICAgICAgIGxlZnQ6IDA7XHJcbi8vICAgICAgICAgICAgdG9wOiAycHg7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4yZW07IFxyXG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgICY6OmFmdGVyIHtcclxuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgIGNsZWFyOiBib3RoO1xyXG4gICAgICAgICAgICBjb250ZW50OiAnJzsgIFxyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgIH1cclxuICAgIFxyXG4gICAgXHJcbn0gXHJcblxyXG4iXX0= */
