body{font-size:14px}ul{list-style:none}a,div,h1,h2,h3,h4,h5,p,ul li{letter-spacing:inherit!important}.vc_btn3.vc_btn3-color-warning.vc_btn3-style-modern{background:#ff3c00!important}.services--grid .vc_general.vc_btn3.vc_btn3-size-md.vc_btn3-shape-rounded.vc_btn3-style-modern.vc_btn3-color-warning{margin-top:30%}.services--grid .vc_custom_heading h3{font-size:1.3em}.black-text,.black-text p{color:#000}header.header{border:0}header.header.headroom.headroom--not-top{background:rgba(0,0,0,.9);border:0}.copyright__list li{padding:15px}.copyright__list{display:-ms-flexbox!important;display:flex!important;-ms-flex-wrap:wrap!important;flex-wrap:wrap!important;-ms-flex-align:center;align-items:center;-ms-flex-pack:center!important;justify-content:center!important}.site-footer{background-color:#000}.site-footer .footer-column{max-width:100%;-ms-flex:0 0 100%;flex:0 0 100%;text-align:center}.site-footer .footer-column .widget_nav_menu .menu{display:-ms-flexbox!important;display:flex!important;-ms-flex-wrap:wrap!important;flex-wrap:wrap!important;-ms-flex-align:center;align-items:center;-ms-flex-pack:center!important;justify-content:center!important}.site-footer .footer-column .widget_nav_menu .menu li{padding:10px}.site-footer .footer-column{max-width:inherit;-ms-flex:inherit;flex:inherit;width:inherit}.footer-wrapper #nav_menu-2 ul li{padding:0 20px!important}.footer-wrapper #text-5{margin:0;padding:0}.footer-wrapper #text-5 div{border-bottom:2px solid #f44d0c;text-align:center}.footer-wrapper #text-5 div p{color:#fff;text-align:center;font-size:1.2em}.gform_wrapper{max-width:100%!important;margin:0}.gform_wrapper .validation_error{font-size:11px!important;background:#e54c37!important;padding:11px!important;color:#fff !important!important;border:0!important}.gform_wrapper .gform_heading{display:none}.gform_wrapper .gform_body ul:after{display:block;content:"";clear:both}.gform_wrapper .gform_body ul .gfield.gfield_error,.gform_wrapper .gform_body ul .gfield.gfield_error.gfield_contains_required.gfield_creditcard_warning{padding:5px!important;background:#e54c37!important;max-width:100%!important;width:100%!important;color:#fff !important!important}.gform_wrapper .gform_body ul li{width:100%;margin-bottom:5px;position:relative;float:left;clear:both;display:block}.gform_wrapper .gform_body ul li button,.gform_wrapper .gform_body ul li input,.gform_wrapper .gform_body ul li select,.gform_wrapper .gform_body ul li textarea{width:100%!important;color:#777474!important;padding:10px;background:#fff!important;outline:0;border:1px solid #e54c37!important;padding-left:10px;font-family:Roboto,sans-serif!important}.gform_wrapper .gform_body ul li>label{display:none!important}.gform_wrapper .gform_footer input[type=submit]{background:#e54c37!important;color:#fff!important;text-transform:uppercase;border:0;padding:8px 40px;transition:all .3s ease}.gform_wrapper .gform_footer input[type=submit]:hover{background:#262626!important;color:#fff!important}.fp-taxonomy-wrapper,.project-taxonomy{display:-ms-flexbox!important;display:flex!important;-ms-flex-wrap:wrap!important;flex-wrap:wrap!important;-ms-flex-align:center;align-items:center;-ms-flex-pack:center!important;justify-content:center!important}.fp-taxonomy-wrapper .fpt-holder,.project-taxonomy .fpt-holder{padding:10px}.fp-taxonomy-wrapper .fpt-holder img,.project-taxonomy .fpt-holder img{width:40px;margin-right:6px}.fp-wrapper{display:-ms-flexbox!important;display:flex!important;-ms-flex-wrap:wrap!important;flex-wrap:wrap!important;-ms-flex-align:center;align-items:center;-ms-flex-pack:center!important;justify-content:center!important;margin:50px 0}.fp-wrapper .fp-inner-holder{width:25%}.forbes-project__items{height:200px;overflow:hidden;display:-ms-flexbox!important;display:flex!important;-ms-flex-wrap:wrap!important;flex-wrap:wrap!important;-ms-flex-align:flex-end;align-items:flex-end;padding:10px;background-size:cover!important;position:relative;width:33.33333%;margin-bottom:20px}.forbes-project__items:before{width:100%;height:100%;content:"";background:rgba(0,0,0,.6);left:0;top:0;position:absolute;z-index:1}.forbes-project__items a{display:-ms-flexbox!important;display:flex!important;-ms-flex-wrap:wrap!important;flex-wrap:wrap!important;-ms-flex-align:flex-end;align-items:flex-end;width:100%;font-size:.9em;padding:10px;text-align:left;position:relative;z-index:2;color:#fff!important}.services-display{margin-bottom:0!important}.services-display .title-holder{margin-bottom:20px!important}.services-display .title-holder p{font-size:1.3em;text-transform:uppercase;color:#000}.services-display__items{display:-ms-flexbox!important;display:flex!important;-ms-flex-wrap:wrap!important;flex-wrap:wrap!important;-ms-flex-align:flex-end;align-items:flex-end;-ms-flex-pack:center!important;justify-content:center!important;height:200px;background-size:cover;background-position:50%;position:relative}.services-display__items:focus .services-overlay,.services-display__items:hover .services-overlay{opacity:1;visibility:visible}.services-display__items .services-overlay{display:-ms-flexbox!important;display:flex!important;-ms-flex-wrap:wrap!important;flex-wrap:wrap!important;-ms-flex-align:center;align-items:center;-ms-flex-pack:center!important;justify-content:center!important;position:absolute;transition:all .4s ease;left:0;top:0;width:100%;height:100%;background:rgba(0,0,0,.8);opacity:0;visibility:hidden}.services-display__items .services-overlay a{display:inline-block;padding:10px 25px;background:#e54c37!important;color:#fff}.white-cap{overflow:hidden}.white-cap:before{content:"";width:156px;background:#fff;height:100%;position:absolute;transform:rotate(22deg);left:-57px;top:0}.bottom-home{position:relative;height:670px}.bottom-home:after{content:"";width:100%;height:500px;background:linear-gradient(180deg,hsla(0,0%,100%,0) 0,#000);bottom:-2px;position:absolute;left:0;z-index:1}.quote__top.wpb_column.vc_column_container.vc_col-sm-12{position:absolute;top:-86px;margin:auto;left:0;right:0;max-width:50%;color:#000}.quote__top.wpb_column.vc_column_container.vc_col-sm-12 p{color:#000}.interested-div a,.interested-div h3,.interested-div p{color:#fff!important;position:relative;z-index:2}.interested-div a:hover{color:#f44d0c!important}.white-cover{position:relative;oveflow:hidden}.white-cover:before{content:"";background:url(http://development.spiderowls.com/forbesbros/wp-content/uploads/2019/11/tail-white.png);position:absolute;width:130px;height:100%;left:0;top:0;background-size:100% 100%}.container.services-single-container{max-width:100%;padding:0}.services-single-content{display:-ms-flexbox!important;display:flex!important;-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.services-single-content__item{width:50%}.services-single-content__left{padding:80px}.services-single-content__left ul li{position:relative;font-size:1.2em;margin-bottom:5px}.services-single-content__left ul li:marker{display:none}.services-single-content__left ul li:before{position:absolute;top:8px;left:-20px;width:7px;height:7px;background:#e54c37!important;content:"";display:block}#content .wpb_alert p:last-child,#content .wpb_text_column :last-child,#content .wpb_text_column p:last-child,.wpb_alert p:last-child,.wpb_text_column :last-child,.wpb_text_column p:last-child{margin-bottom:inherit}.icons{display:none!important;width:50px;height:50px;position:absolute;right:15px;bottom:0}.projects-container{max-width:100%;padding:0}.project-single-details{padding:2% 5%}.project-single-details__information{padding:0!important;margin:0!important;margin-bottom:25px!important}.project-single-details__information li{margin-bottom:15px;font-size:1.3em;color:#999}.project-single-details__information strong{color:#000;margin-right:9px}.project-single-details__description p{color:#999;font-size:1.2em}.project-single-details__description ul li{position:relative;font-size:1.2em;margin-bottom:5px}.project-single-details__description ul li:marker{display:none}.project-single-details__description ul li:before{position:absolute;top:8px;left:-20px;width:7px;height:7px;background:#e54c37!important;content:"";display:block}.project-single-details__category{margin:50px 0}.project-single-details__category img{width:45px}.project-single-details__title{font-size:2.2em;border-bottom:1px solid #f44d0c;padding-bottom:10px;margin-bottom:25px}.project-single-details__image--holder{overflow:auto;height:auto;overflow:hidden}.project-single-details__image--holder img{width:100%;height:auto}.services__icons img{opacity:.5;transition:all .3s ease}.services__icons a{opacity:1!important}.services__icons a:hover img{opacity:1}.paragraph-text .wpb_wrapper p{font-size:1.5em;color:#000!important}.project-category-filter{display:-ms-flexbox!important;display:flex!important;-ms-flex-wrap:wrap!important;flex-wrap:wrap!important;position:relative;bottom:-30px}.project-category-filter .fpt-holder{width:25%;margin-bottom:20px}.project-category-filter .fpt-holder button{background:transparent;border:0}.project-category-filter .fpt-holder img{width:40px;opacity:.6;transition:all .3s ease}.project-category-filter .fpt-holder:hover img{opacity:1}.project-display-thumbnail>div{padding:0;margin-bottom:40px}.project-display-thumbnail .img-holder{overflow:hidden;height:200px;position:relative;background-size:cover;background-position:50%}.project-display-thumbnail .img-holder .attachment-thumbnail.size-thumbnail{position:absolute;right:5px;bottom:5px;width:40px;height:40px}.project-display-thumbnail .img-holder:before{content:"";position:absolute;left:0;top:0;width:100%;height:100%;background:hsla(0,0%,100%,.2)}.project-display-thumbnail .img-holder:hover .fp-overlay{opacity:1;visibility:visible}.project-display-thumbnail .title-holder{margin:0!important;padding-top:10px}.project-display-thumbnail .title-holder h3{font-size:1.4em;margin:0}.project-display-thumbnail .fp-overlay{position:absolute;width:100%;height:100%;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;background:rgba(0,0,0,.8);opacity:0;visibility:hidden;transition:all .5s ease}.project-display-thumbnail .fp-overlay a{display:inline-block;padding:10px 25px;background:#e54c37!important;color:#fff}.related-project-list .title{max-width:1400px;margin:20px auto}.related-project-list .project-tile{width:20%;display:block;float:left;height:170px;background-size:cover;background-position:50%;background-repeat:no-repeat;position:relative}.related-project-list .project-tile:hover .project-overlay{opacity:1;visibility:visible}.related-project-list .project-tile .project-overlay{position:absolute;width:100%;height:100%;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;background:rgba(0,0,0,.8);opacity:0;visibility:hidden;transition:all .5s ease}.related-project-list .project-tile .project-overlay a{display:inline-block;padding:10px 25px;background:#e54c37!important;color:#fff;font-size:.8em}.contact-us-section__left ul li{font-size:1.5em;margin-bottom:15px;display:-ms-flexbox!important;display:flex!important;-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.contact-us-section__left ul li strong{width:180px;color:#000}.contact-us-section__left ul li br{display:none}.dwqa-breadcrumbs{background:#262626!important}.dwqa-breadcrumbs a{padding:10px;display:inline-block;color:#fff}.dwqa-breadcrumbs .dwqa-current{color:#e54c37!important}h2.vc_custom_heading{padding-bottom:10px;text-transform:uppercase!important;font-weight:700;font-size:2.7em;color:#262626!important}h1.vc_custom_heading{position:relative;padding-bottom:20px;margin-bottom:15px}h1.vc_custom_heading:after{display:block;position:absolute;content:"";background:red;width:174px;height:2px;margin:10px 0}.wpb_accordion ul li{position:relative;font-size:1.2em;margin-bottom:5px}.wpb_accordion ul li:marker{display:none}.wpb_accordion ul li:before{position:absolute;top:8px;left:-20px;width:7px;height:7px;background:#e54c37!important;content:"";display:block}.ui-accordion-header a{color:#fff;text-transform:uppercase;font-size:1.5em}.ui-accordion-header{background:#e54c37!important;color:#fff!important}.ui-accordion-content .wpb_wrapper strong{color:#000}.wx-button.align-left,.wx-heading.align-left{text-align:left}.wx-button.align-center,.wx-heading.align-center{text-align:center}.wx-button.align-right,.wx-heading.align-right{text-align:right}.wx-heading{text-decoration:none!important;display:block;margin-top:15px;margin-bottom:55px}@media only screen and (max-width:1000px){.wx-heading{margin-bottom:10px}}.wx-heading .image{width:200px;margin:auto}.wx-heading .fourth-heading,.wx-heading .primary-heading,.wx-heading .secondary-heading,.wx-heading .third-heading{display:inline-block;margin:0;text-transform:uppercase;font-family:Oswald,sans-serif!important;position:relative}.wx-heading .primary-heading{font-size:3em;text-transform:uppercase;margin-bottom:15px;padding-bottom:15px}.wx-heading .primary-heading:after{width:300px;position:absolute;content:"";left:0;bottom:0;height:2px;display:block;background:#fff!important}.wx-heading .secondary-heading{font-size:2.5em;text-transform:uppercase;font-weight:500;color:#e54c37!important}.wx-heading .secondary-heading:before{display:none}.wx-heading .third-heading{font-size:1.3em;text-transform:capitalize;font-weight:500;color:#fff!important;font-family:Roboto,sans-serif!important}.wx-heading .fourth-heading{color:#fff!important;font-size:3.5em;margin-bottom:25px}.wx-heading .heading-subtitle,.wx-heading p{width:80%;margin:auto;font-weight:300;font-style:italic;font-size:1.1em}.wx-heading .image img{margin-top:10px;margin-bottom:20px}.no-subtitle .heading-subtitle,.no-subtitle p{display:none}.wx-heading.align-left .heading-subtitle{text-align:left;width:100%;font-size:1.3em;letter-spacing:inherit;text-transform:capitalize;font-family:Roboto,sans-serif!important;font-style:normal;line-height:24px}.with-subtitle .heading-subtitle,.with-subtitle p{display:none}@media only screen and (max-width:800px){.wx-heading .fourth-heading,.wx-heading .primary-heading,.wx-heading .secondary-heading,.wx-heading .third-heading{font-size:1.5em!important;margin-bottom:10px}}.wx-button.primary-button{color:#fff!important;background:#e54c37!important;border-radius:100px;-moz-border-radius:100px;display:inline-block;padding:10px 30px;text-decoration:none;display:block;width:80%;margin:auto;text-transform:uppercase;text-align:center;margin-bottom:20px}.wx-button.primary-button p{margin:0;font-weight:700;color:#fff!important}.wx-button.primary-button:hover{opacity:.3}.wx-button.secondary-button{border:transparent;font-weight:700;padding:15px 20px;border-radius:5px;-moz-border-radius:5px}.wx-button.secondary-button:before{content:"\f095";margin-right:10px;display:inline-block;font:normal normal normal 14px/1 FontAwesome;font-size:inherit;text-rendering:auto;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-size:1.3em}.wx-button.third-button{color:#fff!important;background:#e54c37!important;display:inline-block;padding:5px 10px}.wx-button.third-button p{display:inline-block;margin:0}.wx-button.third-button:after{content:"\f178";margin-left:5px;display:inline-block;font:normal normal normal 14px/1 FontAwesome;font-size:inherit;text-rendering:auto;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.wx-button.third-button:hover{opacity:.6;transform:translate(15%);-moz-transform:translate(15%);-webkit-transform:translate(15%);-o-transform:translate(15%)}.text-image-wrapper{margin-bottom:25px;position:relative;overflow:hidden}.text-image-wrapper .text-image-holder{position:relative;transition:all .3s ease}.text-image-wrapper .text-image-holder:before{width:100%;height:100px;background:linear-gradient(180deg,transparent 0,rgba(0,0,0,.32) 48%,rgba(0,0,0,.65) 98%,rgba(0,0,0,.65));filter:progid:DXImageTransform.Microsoft.gradient(startColorstr="#00000000",endColorstr="#a6000000",GradientType=0);position:absolute;bottom:0;left:0;content:""}.text-image-wrapper .text-image-holder img{width:100%}.text-image-wrapper .text-image-holder h4{position:absolute;bottom:0;width:100%;left:0;margin:0;padding:20px;text-transform:uppercase;color:#fff!important;font-size:1.875em;transition:all 1s ease;font-weight:500;font-family:Oswald,sans-serif!important}.text-image-wrapper .text-image-holder .overlay{position:absolute;left:0;top:0;width:100%;height:100%;background:rgba(0,0,0,.8);transition:all .3s ease;opacity:0}.text-image-wrapper .text-image-holder .overlay .overlay-holder{width:80%;position:absolute;top:0;height:75px;bottom:0;margin:auto;left:0;right:0;text-align:center;color:#fff!important}.text-image-wrapper .text-image-holder .overlay .overlay-holder h5{text-transform:uppercase;color:#e54c37!important}.text-image-wrapper .text-image-holder .overlay .overlay-holder p{display:inline;color:#fff!important}.text-image-wrapper .text-image-holder .overlay .overlay-holder .description{overflow:hidden;text-overflow:ellipsis;display:-webkit-box;line-height:15px;max-height:32px;-webkit-line-clamp:2;font-size:.8em}.text-image-wrapper .text-image-holder:hover .overlay{display:block;opacity:1}.text-image-wrapper .text-image-holder:hover h4{transform:translateY(100%)}.vc_col-sm-3 .text-image-wrapper .text-image-holder h4{font-size:1.3em}ul.wx-details{width:70%}ul.wx-details li{font-size:1.3em;position:relative;padding-left:50px;margin-bottom:30px;vertical-align:middle}ul.wx-details li:before{display:none}ul.wx-details li a{text-decoration:none;color:#262626!important}ul.wx-details li a:hover{color:#e54c37!important}ul.wx-details li i{font-size:1.2em;display:inline-block}ul.wx-details li:after{display:block;clear:both;content:""}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
