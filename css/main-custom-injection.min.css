body{font-size:14px}ul{list-style:none}a,div,h1,h2,h3,h4,h5,p,ul li{letter-spacing:inherit!important}.vc_btn3.vc_btn3-color-warning.vc_btn3-style-modern{background:#ff3c00!important}.services--grid .vc_general.vc_btn3.vc_btn3-size-md.vc_btn3-shape-rounded.vc_btn3-style-modern.vc_btn3-color-warning{margin-top:30%}.services--grid .vc_custom_heading h3{font-size:1.3em}.black-text,.black-text p{color:#000}header.header{border:0}header.header.headroom.headroom--not-top{background:rgba(0,0,0,.9);border:0}.copyright__list li{padding:15px}.copyright__list{display:-ms-flexbox!important;display:flex!important;-ms-flex-wrap:wrap!important;flex-wrap:wrap!important;-ms-flex-align:center;align-items:center;-ms-flex-pack:center!important;justify-content:center!important}.site-footer{background-color:#000}.site-footer .footer-column{max-width:100%;-ms-flex:0 0 100%;flex:0 0 100%;text-align:center}.site-footer .footer-column .widget_nav_menu .menu{display:-ms-flexbox!important;display:flex!important;-ms-flex-wrap:wrap!important;flex-wrap:wrap!important;-ms-flex-align:center;align-items:center;-ms-flex-pack:center!important;justify-content:center!important}.site-footer .footer-column .widget_nav_menu .menu li{padding:10px}.site-footer .footer-column{max-width:inherit;-ms-flex:inherit;flex:inherit;width:inherit}.footer-wrapper #nav_menu-2 ul li{padding:0 20px!important}.footer-wrapper #text-5{margin:0;padding:0}.footer-wrapper #text-5 div{border-bottom:2px solid #f44d0c;text-align:center}.footer-wrapper #text-5 div p{color:#fff;text-align:center;font-size:1.2em}.gform_wrapper{max-width:100%!important;margin:0}.gform_wrapper .validation_error{font-size:11px!important;background:#f36a22!important;padding:11px!important;color:#fff !important!important;border:0!important}.gform_wrapper .gform_heading{display:none}.gform_wrapper .gform_body ul:after{display:block;content:"";clear:both}.gform_wrapper .gform_body ul .gfield.gfield_error,.gform_wrapper .gform_body ul .gfield.gfield_error.gfield_contains_required.gfield_creditcard_warning{padding:5px!important;background:#f36a22!important;max-width:100%!important;width:100%!important;color:#fff !important!important}.gform_wrapper .gform_body ul li{width:100%;margin-bottom:5px;position:relative;float:left;clear:both;display:block}.gform_wrapper .gform_body ul li button,.gform_wrapper .gform_body ul li input,.gform_wrapper .gform_body ul li select,.gform_wrapper .gform_body ul li textarea{width:100%!important;color:#777474!important;padding:10px;background:#fff!important;outline:0;border:1px solid #f36a22!important;padding-left:10px;font-family:Roboto,sans-serif!important}.gform_wrapper .gform_body ul li>label{display:none!important}.gform_wrapper .gform_footer input[type=submit]{background:#f36a22!important;color:#fff!important;text-transform:uppercase;border:0;padding:8px 40px;transition:all .3s ease}.gform_wrapper .gform_footer input[type=submit]:hover{background:#262626!important;color:#fff!important}.fp-taxonomy-wrapper,.project-taxonomy{display:-ms-flexbox!important;display:flex!important;-ms-flex-wrap:wrap!important;flex-wrap:wrap!important;-ms-flex-align:center;align-items:center;-ms-flex-pack:center!important;justify-content:center!important}.fp-taxonomy-wrapper .fpt-holder,.project-taxonomy .fpt-holder{padding:10px}.fp-taxonomy-wrapper .fpt-holder img,.project-taxonomy .fpt-holder img{width:40px;margin-right:6px}.fp-wrapper{display:-ms-flexbox!important;display:flex!important;-ms-flex-wrap:wrap!important;flex-wrap:wrap!important;-ms-flex-align:center;align-items:center;-ms-flex-pack:center!important;justify-content:center!important;margin:50px 0}.fp-wrapper .fp-inner-holder{width:25%}.forbes-project__items{height:200px;overflow:hidden;display:-ms-flexbox!important;display:flex!important;-ms-flex-wrap:wrap!important;flex-wrap:wrap!important;-ms-flex-align:flex-end;align-items:flex-end;padding:10px;background-size:cover!important;position:relative;width:33.33333%;margin-bottom:20px}.forbes-project__items:before{width:100%;height:100%;content:"";background:rgba(0,0,0,.6);left:0;top:0;position:absolute;z-index:1}.forbes-project__items a{display:-ms-flexbox!important;display:flex!important;-ms-flex-wrap:wrap!important;flex-wrap:wrap!important;-ms-flex-align:flex-end;align-items:flex-end;width:100%;font-size:.9em;padding:10px;text-align:left;position:relative;z-index:2;color:#fff!important}.services-display{margin-bottom:0!important}.services-display .title-holder{margin-bottom:20px!important}.services-display .title-holder p{font-size:1.3em;text-transform:uppercase;color:#000}.services-display__items{display:-ms-flexbox!important;display:flex!important;-ms-flex-wrap:wrap!important;flex-wrap:wrap!important;-ms-flex-align:flex-end;align-items:flex-end;-ms-flex-pack:center!important;justify-content:center!important;height:200px;background-size:cover;background-position:50%;position:relative}.services-display__items:focus .services-overlay,.services-display__items:hover .services-overlay{opacity:1;visibility:visible}.services-display__items .services-overlay{display:-ms-flexbox!important;display:flex!important;-ms-flex-wrap:wrap!important;flex-wrap:wrap!important;-ms-flex-align:center;align-items:center;-ms-flex-pack:center!important;justify-content:center!important;position:absolute;transition:all .4s ease;left:0;top:0;width:100%;height:100%;background:rgba(0,0,0,.8);opacity:0;visibility:hidden}.services-display__items .services-overlay a{display:inline-block;padding:10px 25px;background:#f36a22!important;color:#fff}.white-cap{overflow:hidden}.white-cap:before{content:"";width:156px;background:#fff;height:100%;position:absolute;transform:rotate(22deg);left:-57px;top:0}.bottom-home{position:relative;height:670px}.bottom-home:after{content:"";width:100%;height:500px;background:linear-gradient(180deg,hsla(0,0%,100%,0) 0,#000);bottom:-2px;position:absolute;left:0;z-index:1}.quote__top.wpb_column.vc_column_container.vc_col-sm-12{position:absolute;top:-86px;margin:auto;left:0;right:0;max-width:50%;color:#000}.quote__top.wpb_column.vc_column_container.vc_col-sm-12 p{color:#000}.interested-div a,.interested-div h3,.interested-div p{color:#fff!important;position:relative;z-index:2}.interested-div a:hover{color:#f44d0c!important}.white-cover{position:relative;oveflow:hidden}.white-cover:before{content:"";background:url(http://development.spiderowls.com/forbesbros/wp-content/uploads/2019/11/tail-white.png);position:absolute;width:130px;height:100%;left:0;top:0;background-size:100% 100%}.container.services-single-container{max-width:100%;padding:0}.services-single-content{display:-ms-flexbox!important;display:flex!important;-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.services-single-content__item{width:50%}.services-single-content__left{padding:80px}.services-single-content__left ul li{position:relative;font-size:1.2em;margin-bottom:5px}.services-single-content__left ul li:marker{display:none}.services-single-content__left ul li:before{position:absolute;top:8px;left:-20px;width:7px;height:7px;background:#f36a22!important;content:"";display:block}#content .wpb_alert p:last-child,#content .wpb_text_column :last-child,#content .wpb_text_column p:last-child,.wpb_alert p:last-child,.wpb_text_column :last-child,.wpb_text_column p:last-child{margin-bottom:inherit}.icons{display:none!important;width:50px;height:50px;position:absolute;right:15px;bottom:0}.projects-container{max-width:100%;padding:0}.project-single-details{padding:2% 5%}.project-single-details__information{padding:0!important;margin:0!important;margin-bottom:25px!important}.project-single-details__information li{margin-bottom:15px;font-size:1.3em;color:#999}.project-single-details__information strong{color:#000;margin-right:9px}.project-single-details__description p{color:#999;font-size:1.2em}.project-single-details__description ul li{position:relative;font-size:1.2em;margin-bottom:5px}.project-single-details__description ul li:marker{display:none}.project-single-details__description ul li:before{position:absolute;top:8px;left:-20px;width:7px;height:7px;background:#f36a22!important;content:"";display:block}.project-single-details__category{margin:50px 0}.project-single-details__category img{width:45px}.project-single-details__title{font-size:2.2em;border-bottom:1px solid #f44d0c;padding-bottom:10px;margin-bottom:25px}.project-single-details__image--holder{overflow:auto;height:auto;overflow:hidden}.project-single-details__image--holder img{width:100%;height:auto}.services__icons img{opacity:.5;transition:all .3s ease}.services__icons a{opacity:1!important}.services__icons a:hover img{opacity:1}.paragraph-text .wpb_wrapper p{font-size:1.5em;color:#000!important}.project-category-filter{display:-ms-flexbox!important;display:flex!important;-ms-flex-wrap:wrap!important;flex-wrap:wrap!important;position:relative;bottom:-30px}.project-category-filter .fpt-holder{width:25%;margin-bottom:20px}.project-category-filter .fpt-holder button{background:transparent;border:0}.project-category-filter .fpt-holder img{width:40px;opacity:.6;transition:all .3s ease}.project-category-filter .fpt-holder:hover img{opacity:1}.project-display-thumbnail>div{padding:0;margin-bottom:40px}.project-display-thumbnail .img-holder{overflow:hidden;height:200px;position:relative;background-size:cover;background-position:50%}.project-display-thumbnail .img-holder .attachment-thumbnail.size-thumbnail{position:absolute;right:5px;bottom:5px;width:40px;height:40px}.project-display-thumbnail .img-holder:before{content:"";position:absolute;left:0;top:0;width:100%;height:100%;background:hsla(0,0%,100%,.2)}.project-display-thumbnail .img-holder:hover .fp-overlay{opacity:1;visibility:visible}.project-display-thumbnail .title-holder{margin:0!important;padding-top:10px}.project-display-thumbnail .title-holder h3{font-size:1.4em;margin:0}.project-display-thumbnail .fp-overlay{position:absolute;width:100%;height:100%;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;background:rgba(0,0,0,.8);opacity:0;visibility:hidden;transition:all .5s ease}.project-display-thumbnail .fp-overlay a{display:inline-block;padding:10px 25px;background:#f36a22!important;color:#fff}.related-project-list .title{max-width:1400px;margin:20px auto}.related-project-list .project-tile{width:20%;display:block;float:left;height:170px;background-size:cover;background-position:50%;background-repeat:no-repeat;position:relative}.related-project-list .project-tile:hover .project-overlay{opacity:1;visibility:visible}.related-project-list .project-tile .project-overlay{position:absolute;width:100%;height:100%;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;background:rgba(0,0,0,.8);opacity:0;visibility:hidden;transition:all .5s ease}.related-project-list .project-tile .project-overlay a{display:inline-block;padding:10px 25px;background:#f36a22!important;color:#fff;font-size:.8em}.contact-us-section__left ul li{font-size:1.5em;margin-bottom:15px;display:-ms-flexbox!important;display:flex!important;-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.contact-us-section__left ul li strong{width:180px;color:#000}.contact-us-section__left ul li br{display:none}.dwqa-breadcrumbs{background:#262626!important}.dwqa-breadcrumbs a{padding:10px;display:inline-block;color:#fff}.dwqa-breadcrumbs .dwqa-current{color:#f36a22!important}h2.vc_custom_heading{padding-bottom:10px;text-transform:uppercase!important;font-weight:700;font-size:2.7em;color:#262626!important}h1.vc_custom_heading{position:relative;padding-bottom:20px;margin-bottom:15px}h1.vc_custom_heading:after{display:block;position:absolute;content:"";background:red;width:174px;height:2px;margin:10px 0}.wpb_accordion ul li{position:relative;font-size:1.2em;margin-bottom:5px}.wpb_accordion ul li:marker{display:none}.wpb_accordion ul li:before{position:absolute;top:8px;left:-20px;width:7px;height:7px;background:#f36a22!important;content:"";display:block}.ui-accordion-header a{color:#fff;text-transform:uppercase;font-size:1.5em}.ui-accordion-header{background:#f36a22!important;color:#fff!important}.ui-accordion-content .wpb_wrapper strong{color:#000}.wx-button.align-left,.wx-heading.align-left{text-align:left}.wx-button.align-center,.wx-heading.align-center{text-align:center}.wx-button.align-right,.wx-heading.align-right{text-align:right}.wx-heading{text-decoration:none!important;display:block;margin-top:15px;margin-bottom:55px}@media only screen and (max-width:1000px){.wx-heading{margin-bottom:10px}}.wx-heading .image{width:200px;margin:auto}.wx-heading .fourth-heading,.wx-heading .primary-heading,.wx-heading .secondary-heading,.wx-heading .third-heading{display:inline-block;margin:0;text-transform:uppercase;font-family:Oswald,sans-serif!important;position:relative}.wx-heading .primary-heading{font-size:3em;text-transform:uppercase;margin-bottom:15px;padding-bottom:15px}.wx-heading .primary-heading:after{width:300px;position:absolute;content:"";left:0;bottom:0;height:2px;display:block;background:#fff!important}.wx-heading .secondary-heading{font-size:2.5em;text-transform:uppercase;font-weight:500;color:#f36a22!important}.wx-heading .secondary-heading:before{display:none}.wx-heading .third-heading{font-size:1.3em;text-transform:capitalize;font-weight:500;color:#fff!important;font-family:Roboto,sans-serif!important}.wx-heading .fourth-heading{color:#fff!important;font-size:3.5em;margin-bottom:25px}.wx-heading .heading-subtitle,.wx-heading p{width:80%;margin:auto;font-weight:300;font-style:italic;font-size:1.1em}.wx-heading .image img{margin-top:10px;margin-bottom:20px}.no-subtitle .heading-subtitle,.no-subtitle p{display:none}.wx-heading.align-left .heading-subtitle{text-align:left;width:100%;font-size:1.3em;letter-spacing:inherit;text-transform:capitalize;font-family:Roboto,sans-serif!important;font-style:normal;line-height:24px}.with-subtitle .heading-subtitle,.with-subtitle p{display:none}@media only screen and (max-width:800px){.wx-heading .fourth-heading,.wx-heading .primary-heading,.wx-heading .secondary-heading,.wx-heading .third-heading{font-size:1.5em!important;margin-bottom:10px}}.wx-button.primary-button{color:#fff!important;background:#f36a22!important;border-radius:100px;-moz-border-radius:100px;display:inline-block;padding:10px 30px;text-decoration:none;display:block;width:80%;margin:auto;text-transform:uppercase;text-align:center;margin-bottom:20px}.wx-button.primary-button p{margin:0;font-weight:700;color:#fff!important}.wx-button.primary-button:hover{opacity:.3}.wx-button.secondary-button{border:transparent;font-weight:700;padding:15px 20px;border-radius:5px;-moz-border-radius:5px}.wx-button.secondary-button:before{content:"\f095";margin-right:10px;display:inline-block;font:normal normal normal 14px/1 FontAwesome;font-size:inherit;text-rendering:auto;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-size:1.3em}.wx-button.third-button{color:#fff!important;background:#f36a22!important;display:inline-block;padding:5px 10px}.wx-button.third-button p{display:inline-block;margin:0}.wx-button.third-button:after{content:"\f178";margin-left:5px;display:inline-block;font:normal normal normal 14px/1 FontAwesome;font-size:inherit;text-rendering:auto;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.wx-button.third-button:hover{opacity:.6;transform:translate(15%);-moz-transform:translate(15%);-webkit-transform:translate(15%);-o-transform:translate(15%)}.text-image-wrapper{margin-bottom:25px;position:relative;overflow:hidden}.text-image-wrapper .text-image-holder{position:relative;transition:all .3s ease}.text-image-wrapper .text-image-holder:before{width:100%;height:100px;background:linear-gradient(180deg,transparent 0,rgba(0,0,0,.32) 48%,rgba(0,0,0,.65) 98%,rgba(0,0,0,.65));filter:progid:DXImageTransform.Microsoft.gradient(startColorstr="#00000000",endColorstr="#a6000000",GradientType=0);position:absolute;bottom:0;left:0;content:""}.text-image-wrapper .text-image-holder img{width:100%}.text-image-wrapper .text-image-holder h4{position:absolute;bottom:0;width:100%;left:0;margin:0;padding:20px;text-transform:uppercase;color:#fff!important;font-size:1.875em;transition:all 1s ease;font-weight:500;font-family:Oswald,sans-serif!important}.text-image-wrapper .text-image-holder .overlay{position:absolute;left:0;top:0;width:100%;height:100%;background:rgba(0,0,0,.8);transition:all .3s ease;opacity:0}.text-image-wrapper .text-image-holder .overlay .overlay-holder{width:80%;position:absolute;top:0;height:75px;bottom:0;margin:auto;left:0;right:0;text-align:center;color:#fff!important}.text-image-wrapper .text-image-holder .overlay .overlay-holder h5{text-transform:uppercase;color:#f36a22!important}.text-image-wrapper .text-image-holder .overlay .overlay-holder p{display:inline;color:#fff!important}.text-image-wrapper .text-image-holder .overlay .overlay-holder .description{overflow:hidden;text-overflow:ellipsis;display:-webkit-box;line-height:15px;max-height:32px;-webkit-line-clamp:2;font-size:.8em}.text-image-wrapper .text-image-holder:hover .overlay{display:block;opacity:1}.text-image-wrapper .text-image-holder:hover h4{transform:translateY(100%)}.vc_col-sm-3 .text-image-wrapper .text-image-holder h4{font-size:1.3em}ul.wx-details{width:70%}ul.wx-details li{font-size:1.3em;position:relative;padding-left:50px;margin-bottom:30px;vertical-align:middle}ul.wx-details li:before{display:none}ul.wx-details li a{text-decoration:none;color:#262626!important}ul.wx-details li a:hover{color:#f36a22!important}ul.wx-details li i{font-size:1.2em;display:inline-block}ul.wx-details li:after{display:block;clear:both;content:""}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnRpYWxzL19yZXNldHMuc2NzcyIsInBhcnRpYWxzL19idXR0b25zLnNjc3MiLCJwYXJ0aWFscy9faGVhZGVyLnNjc3MiLCJtb2R1bGVzL19taXhpbi5zY3NzIiwicGFydGlhbHMvX2Zvb3Rlci5zY3NzIiwicGFydGlhbHMvX2Zvcm1zLnNjc3MiLCJtb2R1bGVzL19jb2xvcnMuc2NzcyIsIm1vZHVsZXMvX3R5cG9ncmFwaHkuc2NzcyIsInBhcnRpYWxzL19wYWdlcy5zY3NzIiwicGFydGlhbHMvX2JyZWFkY3J1bWJzLnNjc3MiLCJwYXJ0aWFscy9faGVhZGluZ3Muc2NzcyIsInBhcnRpYWxzL19hY2NvcmRpb24uc2NzcyIsInBhcnRpYWxzL3d4LXNob3J0Y29kZS9fYWxsd3hzaG9ydGNvZGVzLnNjc3MiLCJwYXJ0aWFscy93eC1zaG9ydGNvZGUvX2hlYWRpbmdzLnNjc3MiLCJwYXJ0aWFscy93eC1zaG9ydGNvZGUvX2J1dHRvbnMuc2NzcyIsInBhcnRpYWxzL3d4LXNob3J0Y29kZS9fdGh1bWJuYWlsd3RleHQuc2NzcyIsInBhcnRpYWxzL3d4LXNob3J0Y29kZS9fZGV0YWlscy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLEtBRUksY0FBZSxDQUNsQixBQUVELEdBQ0ksZUFBZ0IsQ0FDbkIsQUFFRCw2QkFVSSxnQ0FBa0MsQ0FDckMsQUNwQkQsb0RBQ0ksNEJBQThCLENBQ2pDLEFBRUQscUhBRVEsY0FBZSxDQUNsQixBQUhMLHNDQUtRLGVBQWdCLENBQ25CLEFBR0wsMEJBR1EsVUFBVyxDQUNkLEFDakJMLGNBRVEsUUFBUyxDQVNaLEFBWEwseUNDYUksMEJBQW1DLEFETm5CLFFBQVMsQ0FDWixBRVJqQixvQkFDSSxZQUFhLENBQ2hCLEFBR0csaUJEK0ZBLDhCQUErQixBQUMvQix1QkFBd0IsQUFDeEIsNkJBQThCLEFBQzlCLHlCQUEwQixBQVcxQixzQkMzR29DLEFENEdwQyxtQkM1R29DLEFEcUdwQywrQkFBNEIsQUFDNUIsZ0NBQThC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ZSI6Im1haW4tY3VzdG9tLWluamVjdGlvbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJib2R5IHtcclxuICAgIC8vIGZvbnQtZmFtaWx5OiAkZm9udC1zZWNvbmRhcnk7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbn1cclxuXHJcbnVsIHtcclxuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbn1cclxuXHJcbmgxLFxyXG5oMixcclxuaDMsXHJcbmg0LFxyXG5oNSxcclxucCxcclxuZGl2LFxyXG51bCBsaSxcclxuYSB7XHJcbiAgICAvLyAgICBmb250LWZhbWlseTogJGZvbnQtc2Vjb25kYXJ5O1xyXG4gICAgbGV0dGVyLXNwYWNpbmc6IGluaGVyaXQgIWltcG9ydGFudDtcclxufVxyXG5cclxuLy8gKiB7XHJcbi8vICAgICBAaW5jbHVkZSB0cmFuc2l0aW9uKC4zcyk7XHJcbi8vIH0iLCIudmNfYnRuMy52Y19idG4zLWNvbG9yLXdhcm5pbmcudmNfYnRuMy1zdHlsZS1tb2Rlcm4ge1xyXG4gICAgYmFja2dyb3VuZDogI2ZmM2MwMCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4uc2VydmljZXMtLWdyaWQge1xyXG4gICAgLnZjX2dlbmVyYWwudmNfYnRuMy52Y19idG4zLXNpemUtbWQudmNfYnRuMy1zaGFwZS1yb3VuZGVkLnZjX2J0bjMtc3R5bGUtbW9kZXJuLnZjX2J0bjMtY29sb3Itd2FybmluZyB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMzAlO1xyXG4gICAgfVxyXG4gICAgLnZjX2N1c3RvbV9oZWFkaW5nIGgzIHtcclxuICAgICAgICBmb250LXNpemU6IDEuM2VtO1xyXG4gICAgfVxyXG59XHJcblxyXG4uYmxhY2stdGV4dCB7XHJcbiAgICBjb2xvcjogIzAwMDtcclxuICAgIHAge1xyXG4gICAgICAgIGNvbG9yOiAjMDAwO1xyXG4gICAgfVxyXG59IiwiaGVhZGVyIHtcclxuICAgICYuaGVhZGVyIHtcclxuICAgICAgICBib3JkZXI6IDA7XHJcbiAgICAgICAgJi5oZWFkcm9vbSB7XHJcbiAgICAgICAgICAgICYuaGVhZHJvb20ge1xyXG4gICAgICAgICAgICAgICAgJi0tbm90LXRvcCB7XHJcbiAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgdC1ibGFjayguOSk7XHJcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiAwO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiQG1peGluIGJvcmRlci1yYWRpdXMoJHZhbHVlOjVweCkge1xyXG4gICAgLXdlYmtpdC1ib3JkZXItcmFkaXVzOiAkdmFsdWU7XHJcbiAgICBib3JkZXItcmFkaXVzOiAkdmFsdWU7XHJcbiAgICAtbW96LWJvcmRlci1yYWRpdXM6ICR2YWx1ZTtcclxufVxyXG5cclxuQG1peGluIG5vYmFja2dyb3VuZCB7XHJcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcclxufVxyXG5cclxuLy9CQUNLR1JPVU5EIFJHQkEgQ09MT1JTXHJcbkBtaXhpbiB0LWJsYWNrKCRvcGFjaXR5Oi42KSB7XHJcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsICRvcGFjaXR5KTtcclxufVxyXG5cclxuQG1peGluIHQtd2hpdGUoJG9wYWNpdHk6LjkpIHtcclxuICAgIGJhY2tncm91bmQ6IHJnYmEoMjU2LCAyNTYsIDI1NiwgJG9wYWNpdHkpO1xyXG59XHJcblxyXG5AbWl4aW4gdC1jb2xvcigkdmFsdWUxOjAsICR2YWx1ZTI6MCwgJHZhbHVlMzowLCAkb3BhY2l0eTouOCkge1xyXG4gICAgYmFja2dyb3VuZDogcmdiYSgkdmFsdWUxLCAkdmFsdWUyLCAkdmFsdWUzLCAkb3BhY2l0eSk7XHJcbn1cclxuXHJcbkBtaXhpbiBzaGFkb3cge1xyXG4gICAgLXdlYmtpdC1ib3gtc2hhZG93OiAxcHggMXB4IDVweCAxcHggcmdiYSgwLCAwLCAwLCAuMik7XHJcbiAgICBib3gtc2hhZG93OiAxcHggMXB4IDVweCAxcHggcmdiYSgwLCAwLCAwLCAuMik7XHJcbn1cclxuXHJcbkBtaXhpbiBub3NoYWRvdyB7XHJcbiAgICAtd2Via2l0LWJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcclxuICAgIGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcclxufVxyXG5cclxuQG1peGluIHRyYW5zaXRpb24oJHRpbWUpIHtcclxuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsICR0aW1lIGVhc2U7XHJcbiAgICAtbW96LXRyYW5zaXRpb246IGFsbCAkdGltZSBlYXNlO1xyXG4gICAgLW1zLXRyYW5zaXRpb246IGFsbCAkdGltZSBlYXNlO1xyXG4gICAgLW8tdHJhbnNpdGlvbjogYWxsICR0aW1lIGVhc2U7XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgJHRpbWUgZWFzZTtcclxufVxyXG5cclxuQG1peGluIGZsb2F0aW5nKCRwb3NpdGlvbjphYnNvbHV0ZSwgJHRvcDowLCAkbGVmdDowLCAkcmlnaHQ6MCwgJGJvdHRvbTowKSB7XHJcbiAgICBwb3NpdGlvbjogJHBvc2l0aW9uICFpbXBvcnRhbnQ7XHJcbiAgICB0b3A6ICR0b3AgIWltcG9ydGFudDtcclxuICAgIGxlZnQ6ICRsZWZ0ICFpbXBvcnRhbnQ7XHJcbiAgICByaWdodDogJHJpZ2h0ICFpbXBvcnRhbnQ7XHJcbiAgICBib3R0b206ICRib3R0b20gIWltcG9ydGFudDtcclxufVxyXG5cclxuQG1peGluIHRyYW5zZm9ybV90cmFuc2xhdGUoJHgsICR5KSB7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgkeCwgJHkpO1xyXG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZSgkeCwgJHkpO1xyXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZSgkeCwgJHkpO1xyXG4gICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGUoJHgsICR5KTtcclxufVxyXG5cclxuQG1peGluIHRyYW5zZm9ybV9zY2FsZSgkeCwgJHkpIHtcclxuICAgIHRyYW5zZm9ybTogc2NhbGUoJHgsICR5KTtcclxuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZSgkeCwgJHkpO1xyXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKCR4LCAkeSk7XHJcbiAgICAtby10cmFuc2Zvcm06IHNjYWxlKCR4LCAkeSk7XHJcbn1cclxuXHJcbkBtaXhpbiBib3JkZXIoJHZhbHVlOjFweCwgJHN0eWxlOnNvbGlkLCAkY29sb3I6JGNvbG9yLWJsYWNrKSB7XHJcbiAgICBib3JkZXI6ICR2YWx1ZSAkc3R5bGUgJGNvbG9yO1xyXG59XHJcblxyXG5AbWl4aW4gci1tYXJnaW4ge1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxufVxyXG5cclxuQG1peGluIGFic29sdXRlIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxufVxyXG5cclxuQG1peGluIGZpeGVkIHtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxufVxyXG5cclxuQG1peGluIGZvbnRhd2Vzb21lIHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIGZvbnQ6IG5vcm1hbCBub3JtYWwgbm9ybWFsIDE0cHgvMSBGb250QXdlc29tZTtcclxuICAgIGZvbnQtc2l6ZTogaW5oZXJpdDtcclxuICAgIHRleHQtcmVuZGVyaW5nOiBhdXRvO1xyXG4gICAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XHJcbiAgICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xyXG59XHJcblxyXG5AbWl4aW4gZmxleCB7XHJcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveCAhaW1wb3J0YW50O1xyXG4gICAgZGlzcGxheTogLW1zLWZsZXhib3ggIWltcG9ydGFudDtcclxuICAgIGRpc3BsYXk6IGZsZXggIWltcG9ydGFudDtcclxuICAgIC1tcy1mbGV4LXdyYXA6IHdyYXAgIWltcG9ydGFudDtcclxuICAgIGZsZXgtd3JhcDogd3JhcCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG5AbWl4aW4gZmxleC1qdXN0aWZ5LWNvbnRlbnQoJGE6Y2VudGVyKSB7XHJcbiAgICAtd2Via2l0LWJveC1wYWNrOiAkYSAhaW1wb3J0YW50O1xyXG4gICAgLW1zLWZsZXgtcGFjazogJGEgIWltcG9ydGFudDtcclxuICAgIGp1c3RpZnktY29udGVudDogJGEgIWltcG9ydGFudDtcclxufVxyXG5cclxuQG1peGluIGZsZXgtYWxpZ24taXRlbXMoJGE6Y2VudGVyKSB7XHJcbiAgICAtd2Via2l0LWJveC1hbGlnbjogJGE7XHJcbiAgICAtbXMtZmxleC1hbGlnbjogJGE7XHJcbiAgICBhbGlnbi1pdGVtczogJGE7XHJcbn1cclxuXHJcbkBtaXhpbiBmbGV4LWNvbHVtbigpIHtcclxuICAgIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XHJcbiAgICAtd2Via2l0LWJveC1kaXJlY3Rpb246IG5vcm1hbDtcclxuICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxufSIsIi5jb3B5cmlnaHRfX2xpc3QgbGkge1xyXG4gICAgcGFkZGluZzogMTVweDtcclxufVxyXG5cclxuLmNvcHlyaWdodCB7XHJcbiAgICAmX19saXN0IHtcclxuICAgICAgICBAaW5jbHVkZSBmbGV4O1xyXG4gICAgICAgIEBpbmNsdWRlIGZsZXgtYWxpZ24taXRlbXMoY2VudGVyKTtcclxuICAgICAgICBAaW5jbHVkZSBmbGV4LWp1c3RpZnktY29udGVudChjZW50ZXIpO1xyXG4gICAgfVxyXG59XHJcblxyXG4uc2l0ZS1mb290ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcclxuICAgIC5mb290ZXItY29sdW1uIHtcclxuICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgZmxleDogMCAwIDEwMCU7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIC53aWRnZXRfbmF2X21lbnUge1xyXG4gICAgICAgICAgICAubWVudSB7XHJcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBmbGV4O1xyXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgZmxleC1hbGlnbi1pdGVtcyhjZW50ZXIpO1xyXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgZmxleC1qdXN0aWZ5LWNvbnRlbnQoY2VudGVyKTtcclxuICAgICAgICAgICAgICAgIGxpIHtcclxuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4uc2l0ZS1mb290ZXIgLmZvb3Rlci1jb2x1bW4ge1xyXG4gICAgbWF4LXdpZHRoOiBpbmhlcml0O1xyXG4gICAgZmxleDogaW5oZXJpdDtcclxuICAgIHdpZHRoOiBpbmhlcml0O1xyXG59XHJcblxyXG4uZm9vdGVyLXdyYXBwZXIgI25hdl9tZW51LTIgdWwgbGkge1xyXG4gICAgcGFkZGluZzogMHB4IDIwcHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmZvb3Rlci13cmFwcGVyIHtcclxuICAgICN0ZXh0LTUge1xyXG4gICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICBwYWRkaW5nOiAwO1xyXG4gICAgICAgIGRpdiB7XHJcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjZjQ0ZDBjO1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIHAge1xyXG4gICAgICAgICAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuMmVtO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiLmdmb3JtX3dyYXBwZXIge1xyXG4gICAgbWF4LXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICAudmFsaWRhdGlvbl9lcnJvciB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxMXB4ICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgYmFja2dyb3VuZDogJGNvbG9yLXByaW1hcnk7XHJcbiAgICAgICAgcGFkZGluZzogMTFweCAhaW1wb3J0YW50O1xyXG4gICAgICAgIGNvbG9yOiAkY29sb3Itd2hpdGUgIWltcG9ydGFudDtcclxuICAgICAgICBib3JkZXI6IDAgIWltcG9ydGFudDtcclxuICAgIH1cclxuICAgIC5nZm9ybV9oZWFkaW5nIHtcclxuICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG4gICAgLmdmb3JtX2JvZHkge1xyXG4gICAgICAgIHVsIHtcclxuICAgICAgICAgICAgJjphZnRlciB7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgICAgICAgICAgY2xlYXI6IGJvdGg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLmdmaWVsZC5nZmllbGRfZXJyb3IsXHJcbiAgICAgICAgICAgIC5nZmllbGQuZ2ZpZWxkX2Vycm9yLmdmaWVsZF9jb250YWluc19yZXF1aXJlZC5nZmllbGRfY3JlZGl0Y2FyZF93YXJuaW5nIHtcclxuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDVweCAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogJGNvbG9yLXByaW1hcnk7XHJcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogJGNvbG9yLXdoaXRlICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgbGkge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgICAgICBmbG9hdDogbGVmdDtcclxuICAgICAgICAgICAgICAgIGNsZWFyOiBib3RoO1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgICAgICBpbnB1dCxcclxuICAgICAgICAgICAgICAgIGJ1dHRvbixcclxuICAgICAgICAgICAgICAgIHNlbGVjdCxcclxuICAgICAgICAgICAgICAgIHRleHRhcmVhIHtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAkY29sb3ItZ3JheTtcclxuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICRjb2xvci13aGl0ZTtcclxuICAgICAgICAgICAgICAgICAgICBvdXRsaW5lOiAwO1xyXG4gICAgICAgICAgICAgICAgICAgIEBpbmNsdWRlIGJvcmRlcigkdmFsdWU6IDFweCwgJGNvbG9yOiAkY29sb3ItcHJpbWFyeSk7XHJcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAkZm9udC1zZWNvbmRhcnk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICA+bGFiZWwge1xyXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAmOmZpcnN0LWNoaWxkLCBcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAmOm50aC1jaGlsZCgyKVxyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgIGNsZWFyOiBub25lICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiA0OSUgIWltcG9ydGFudDtcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDo4MDBweCkge1xyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgJjpmaXJzdC1jaGlsZCB7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0IHtcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDk3JSAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ODAwcHgpIHtcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgIC5naW5wdXRfY29udGFpbmVyX3RleHQsXHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgLmdpbnB1dF9jb250YWluZXJfdGV4dGFyZWEsXHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgLmdpbnB1dF9jb250YWluZXJfZW1haWwge1xyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgICY6YmVmb3JlIHtcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogMTBweDtcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDogOHB4O1xyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDI0cHg7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDI0cHg7XHJcbiAgICAgICAgICAgICAgICAvLy8vICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICNmOTk7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgICAgICBAaW5jbHVkZSBmb250YXdlc29tZTtcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMS41ZW07XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogJGNvbG9yLWdyYXk7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgLm5hbWUtaWNvbiB7XHJcbiAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgLmdpbnB1dF9jb250YWluZXJfdGV4dCwuZ2lucHV0X2NvbnRhaW5lcl90ZXh0YXJlYSB7XHJcbiAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgJjpiZWZvcmUge1xyXG4gICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBcIlxcZjAwN1wiO1xyXG4gICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvLyAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgLmVtYWlsLWljb24ge1xyXG4gICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgLmdpbnB1dF9jb250YWluZXJfdGV4dCxcclxuICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgIC5naW5wdXRfY29udGFpbmVyX3RleHRhcmVhLFxyXG4gICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgLmdpbnB1dF9jb250YWluZXJfZW1haWwge1xyXG4gICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgICY6YmVmb3JlIHtcclxuICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogXCJcXGYwZTBcIjtcclxuICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgIC5waG9uZS1pY29uIHtcclxuICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAuZ2lucHV0X2NvbnRhaW5lcl90ZXh0LC5naW5wdXRfY29udGFpbmVyX3RleHRhcmVhIHtcclxuICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAmOmJlZm9yZSB7XHJcbiAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwiXFxmMDk1XCI7XHJcbiAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvLyAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAucGVuLWljb24ge1xyXG4gICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgIC5naW5wdXRfY29udGFpbmVyX3RleHQsLmdpbnB1dF9jb250YWluZXJfdGV4dGFyZWEge1xyXG4gICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgICY6YmVmb3JlIHtcclxuICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogXCJcXGYwNDBcIjtcclxuICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vICAgICAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAuZ2Zvcm1fZm9vdGVyIHtcclxuICAgICAgICBpbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcclxuICAgICAgICAgICAgYmFja2dyb3VuZDogJGNvbG9yLXByaW1hcnk7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkY29sb3Itd2hpdGU7XHJcbiAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgICAgIGJvcmRlcjogMDtcclxuICAgICAgICAgICAgcGFkZGluZzogOHB4IDQwcHg7XHJcbiAgICAgICAgICAgIEBpbmNsdWRlIHRyYW5zaXRpb24oLjNzKTtcclxuICAgICAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAkY29sb3Itc2Vjb25kYXJ5O1xyXG4gICAgICAgICAgICAgICAgY29sb3I6ICRjb2xvci13aGl0ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsIlxyXG4vL0NPTU1PTiBDT0xPUlNcclxuJGNvbG9yLWRhcms6IzE4MTcxOCAhaW1wb3J0YW50OyBcclxuJGNvbG9yLWdyYXkyOiMyODI4MjggIWltcG9ydGFudDsgXHJcbiRjb2xvci1ibGFjazojMDAwMDAwICFpbXBvcnRhbnQ7IFxyXG5cclxuXHJcbi8vVEhFTUUgVVNFIENPTE9SU1xyXG4kY29sb3ItZGFya2JsdWU6IzBhMzU3OCAhaW1wb3J0YW50OyBcclxuJGNvbG9yLWdyZWVuOiMwM2I4NDAgIWltcG9ydGFudDsgXHJcbiRjb2xvci1ncmF5OiM3Nzc0NzQgIWltcG9ydGFudDsgXHJcblxyXG4kY29sb3IteWVsbG93OiNmOGMxMDQgIWltcG9ydGFudDsgXHJcbiRjb2xvci1yZWQ6I2YyMWIxYiAhaW1wb3J0YW50OyBcclxuXHJcblxyXG4kY29sb3ItYmx1ZTojMDE3M2JjICFpbXBvcnRhbnQ7IFxyXG5cclxuJGNvbG9yLXdoaXRlOiNmZmYgIWltcG9ydGFudDsgXHJcblxyXG4kY29sb3ItbGlnaHRncmF5OiNlYmViZWIgIWltcG9ydGFudDsgXHJcbiRjb2xvci1saWdodGdyYXkyOiNmYmZhZmEgIWltcG9ydGFudDsgXHJcbiRjb2xvci1saWdodGdyYXkzOiNkZGQgIWltcG9ydGFudDsgXHJcblxyXG5cclxuJGNvbG9yLWRhcms6IzI2MjYyNiAhaW1wb3J0YW50OyBcclxuJGNvbG9yLW9yYW5nZTojZjM2YTIyICFpbXBvcnRhbnQ7IFxyXG4kY29sb3ItZGFya29yYW5nZTojYjc0NjBiICFpbXBvcnRhbnQ7IFxyXG5cclxuJGNvbG9yLXByaW1hcnk6JGNvbG9yLW9yYW5nZTsgXHJcbiRjb2xvci1zZWNvbmRhcnk6JGNvbG9yLWRhcms7IFxyXG4kY29sb3ItdGhpcmQ6JGNvbG9yLXdoaXRlOyAgICBcclxuIiwiJGZvbnQtcHJpbWFyeTonT3N3YWxkJywgc2Fucy1zZXJpZiAhaW1wb3J0YW50OyBcclxuJGZvbnQtc2Vjb25kYXJ5OidSb2JvdG8nLCBzYW5zLXNlcmlmICFpbXBvcnRhbnQ7XHJcbiRmb250LXRoaXJkOidPcGVuIFNhbnMnLCBzYW5zLXNlcmlmICFpbXBvcnRhbnQ7XHJcblxyXG5cclxuLy9GT05UIFdFSUdIVCBcclxuJGxpZ2h0OjMwMDtcclxuJG1lZGl1bTo1MDA7XHJcbiRyZWd1bGFyOjQwMDtcclxuJGJvbGQ6NzAwOyBcclxuJHNlbWlib2xkOjYwMDtcclxuXHJcbiIsIiAgICAucHJvamVjdC10YXhvbm9teSxcclxuICAgIC5mcC10YXhvbm9teS13cmFwcGVyIHtcclxuICAgICAgICBAaW5jbHVkZSBmbGV4O1xyXG4gICAgICAgIEBpbmNsdWRlIGZsZXgtYWxpZ24taXRlbXMoY2VudGVyKTtcclxuICAgICAgICBAaW5jbHVkZSBmbGV4LWp1c3RpZnktY29udGVudChjZW50ZXIpO1xyXG4gICAgICAgIC5mcHQtaG9sZGVyIHtcclxuICAgICAgICAgICAgcGFkZGluZzogMTBweDtcclxuICAgICAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA0MHB4O1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiA2cHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC5mcC13cmFwcGVyIHtcclxuICAgICAgICBAaW5jbHVkZSBmbGV4O1xyXG4gICAgICAgIEBpbmNsdWRlIGZsZXgtYWxpZ24taXRlbXMoY2VudGVyKTtcclxuICAgICAgICBAaW5jbHVkZSBmbGV4LWp1c3RpZnktY29udGVudChjZW50ZXIpO1xyXG4gICAgICAgIG1hcmdpbjogNTBweCAwO1xyXG4gICAgICAgIC5mcC1pbm5lci1ob2xkZXIge1xyXG4gICAgICAgICAgICB3aWR0aDogY2FsYygxMDAlLzQpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgLmZvcmJlcy1wcm9qZWN0IHtcclxuICAgICAgICAmX19pdGVtcyB7XHJcbiAgICAgICAgICAgIGhlaWdodDogMjAwcHg7XHJcbiAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgICAgIEBpbmNsdWRlIGZsZXg7XHJcbiAgICAgICAgICAgIEBpbmNsdWRlIGZsZXgtYWxpZ24taXRlbXMoZmxleC1lbmQpO1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgd2lkdGg6IGNhbGMoMTAwJS8zKTtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICAgICAgICAgICAgJjpiZWZvcmUge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICAgICAgICAgIEBpbmNsdWRlIHQtYmxhY2soLjYpO1xyXG4gICAgICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgICAgIHRvcDogMDtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgIHotaW5kZXg6IDE7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYSB7XHJcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSBmbGV4O1xyXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgZmxleC1hbGlnbi1pdGVtcyhmbGV4LWVuZCk7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogLjllbTtcclxuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICAgICAgei1pbmRleDogMjtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiAkY29sb3Itd2hpdGU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC5zZXJ2aWNlcy1kaXNwbGF5IHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAwICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgLnRpdGxlLWhvbGRlciB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHggIWltcG9ydGFudDtcclxuICAgICAgICAgICAgcCB7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuM2VtO1xyXG4gICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiAjMDAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgICZfX2l0ZW1zIHtcclxuICAgICAgICAgICAgQGluY2x1ZGUgZmxleDtcclxuICAgICAgICAgICAgQGluY2x1ZGUgZmxleC1hbGlnbi1pdGVtcyhmbGV4LWVuZCk7XHJcbiAgICAgICAgICAgIEBpbmNsdWRlIGZsZXgtanVzdGlmeS1jb250ZW50KGNlbnRlcik7XHJcbiAgICAgICAgICAgIGhlaWdodDogMjAwcHg7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICAmOmZvY3VzLFxyXG4gICAgICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgICAgIC5zZXJ2aWNlcy1vdmVybGF5IHtcclxuICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgICAgICAgICAgICAgIHZpc2liaWxpdHk6IHZpc2libGU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLnNlcnZpY2VzLW92ZXJsYXkge1xyXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgZmxleDtcclxuICAgICAgICAgICAgICAgIEBpbmNsdWRlIGZsZXgtYWxpZ24taXRlbXMoY2VudGVyKTtcclxuICAgICAgICAgICAgICAgIEBpbmNsdWRlIGZsZXgtanVzdGlmeS1jb250ZW50KGNlbnRlcik7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSB0cmFuc2l0aW9uKC40cyk7XHJcbiAgICAgICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSB0LWJsYWNrKC44KTtcclxuICAgICAgICAgICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgICAgICAgICB2aXNpYmlsaXR5OiBoaWRkZW47XHJcbiAgICAgICAgICAgICAgICBhIHtcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMTBweCAyNXB4O1xyXG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICRjb2xvci1vcmFuZ2U7XHJcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICNmZmY7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8vIC53aGl0ZS1jYXAud3BiX2NvbHVtbiB7XHJcbiAgICAvLyAgICAgPmRpdiB7XHJcbiAgICAvLyAgICAgICAgIHdpZHRoOiAyNTBweDtcclxuICAgIC8vICAgICAgICAgaGVpZ2h0OiAxMjUlO1xyXG4gICAgLy8gICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAvLyAgICAgICAgIHotaW5kZXg6IDI7XHJcbiAgICAvLyAgICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgLy8gICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gICAgLy8gICAgICAgICB0b3A6IC04NXB4O1xyXG4gICAgLy8gICAgICAgICBsZWZ0OiAtMTAycHg7XHJcbiAgICAvLyAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDIwZGVnKTtcclxuICAgIC8vICAgICB9XHJcbiAgICAvLyB9XHJcbiAgICAud2hpdGUtY2FwIHtcclxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgICY6YmVmb3JlIHtcclxuICAgICAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxNTZweDtcclxuICAgICAgICAgICAgYmFja2dyb3VuZDogI2ZmZjtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDIyZGVnKTtcclxuICAgICAgICAgICAgbGVmdDogLTU3cHg7XHJcbiAgICAgICAgICAgIHRvcDogMHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgLmJvdHRvbS1ob21lIHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgaGVpZ2h0OiA2NzBweDtcclxuICAgICAgICAmOmFmdGVyIHtcclxuICAgICAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDUwMHB4O1xyXG4gICAgICAgICAgICAvKiBQZXJtYWxpbmsgLSB1c2UgdG8gZWRpdCBhbmQgc2hhcmUgdGhpcyBncmFkaWVudDogaHR0cHM6Ly9jb2xvcnppbGxhLmNvbS9ncmFkaWVudC1lZGl0b3IvI2ZmZmZmZiswLDAwMDAwMCsxMDAmMCswLDErMTAwICovXHJcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IC1tb3otbGluZWFyLWdyYWRpZW50KHRvcCwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwKSAwJSwgcmdiYSgwLCAwLCAwLCAxKSAxMDAlKTtcclxuICAgICAgICAgICAgLyogRkYzLjYtMTUgKi9cclxuICAgICAgICAgICAgYmFja2dyb3VuZDogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG9wLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDApIDAlLCByZ2JhKDAsIDAsIDAsIDEpIDEwMCUpO1xyXG4gICAgICAgICAgICAvKiBDaHJvbWUxMC0yNSxTYWZhcmk1LjEtNiAqL1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDApIDAlLCByZ2JhKDAsIDAsIDAsIDEpIDEwMCUpO1xyXG4gICAgICAgICAgICAvKiBXM0MsIElFMTArLCBGRjE2KywgQ2hyb21lMjYrLCBPcGVyYTEyKywgU2FmYXJpNysgKi9cclxuICAgICAgICAgICAgLy8gZmlsdGVyOiBwcm9naWQ6IERYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LmdyYWRpZW50KCBzdGFydENvbG9yc3RyPScjMDBmZmZmZmYnLCBlbmRDb2xvcnN0cj0nIzAwMDAwMCcsIEdyYWRpZW50VHlwZT0wKTtcclxuICAgICAgICAgICAgLyogSUU2LTkgKi9cclxuICAgICAgICAgICAgYm90dG9tOiAtMnB4O1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgIHotaW5kZXg6IDE7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAucXVvdGVfX3RvcC53cGJfY29sdW1uLnZjX2NvbHVtbl9jb250YWluZXIudmNfY29sLXNtLTEyIHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgdG9wOiAtODZweDtcclxuICAgICAgICBtYXJnaW46IGF1dG87XHJcbiAgICAgICAgbGVmdDogMDtcclxuICAgICAgICByaWdodDogMDtcclxuICAgICAgICBtYXgtd2lkdGg6IDUwJTtcclxuICAgICAgICBjb2xvcjogIzAwMDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLnF1b3RlX190b3Aud3BiX2NvbHVtbi52Y19jb2x1bW5fY29udGFpbmVyLnZjX2NvbC1zbS0xMiBwIHtcclxuICAgICAgICBjb2xvcjogIzAwMDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLmludGVyZXN0ZWQtZGl2IGgzLFxyXG4gICAgLmludGVyZXN0ZWQtZGl2IHAsXHJcbiAgICAuaW50ZXJlc3RlZC1kaXYgYSB7XHJcbiAgICAgICAgY29sb3I6ICNmZmYgIWltcG9ydGFudDtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgei1pbmRleDogMjtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLmludGVyZXN0ZWQtZGl2IGE6aG92ZXIge1xyXG4gICAgICAgIGNvbG9yOiAjZjQ0ZDBjICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC53aGl0ZS1jb3ZlciB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIG92ZWZsb3c6IGhpZGRlbjtcclxuICAgICAgICAmOmJlZm9yZSB7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiB1cmwoJ2h0dHA6Ly9kZXZlbG9wbWVudC5zcGlkZXJvd2xzLmNvbS9mb3JiZXNicm9zL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE5LzExL3RhaWwtd2hpdGUucG5nJyk7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgd2lkdGg6IDEzMHB4O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgIHRvcDogMDtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1zaXplOiAxMDAlIDEwMCU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAuY29udGFpbmVyLnNlcnZpY2VzLXNpbmdsZS1jb250YWluZXIge1xyXG4gICAgICAgIG1heC13aWR0aDogMTAwJTtcclxuICAgICAgICBwYWRkaW5nOiAwO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAuc2VydmljZXMtc2luZ2xlLWNvbnRlbnQge1xyXG4gICAgICAgIEBpbmNsdWRlIGZsZXg7XHJcbiAgICAgICAgJl9faXRlbSB7XHJcbiAgICAgICAgICAgIHdpZHRoOiBjYWxjKDEwMCUvMik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICZfX2xlZnQge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiA4MHB4O1xyXG4gICAgICAgICAgICB1bCB7XHJcbiAgICAgICAgICAgICAgICBsaSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4yZW07XHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gICAgICAgICAgICAgICAgICAgICY6bWFya2VyIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgJjpiZWZvcmUge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogOHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiAtMjBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDdweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiA3cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICRjb2xvci1vcmFuZ2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgICNjb250ZW50IC53cGJfYWxlcnQgcDpsYXN0LWNoaWxkLFxyXG4gICAgI2NvbnRlbnQgLndwYl90ZXh0X2NvbHVtbiA6bGFzdC1jaGlsZCxcclxuICAgICNjb250ZW50IC53cGJfdGV4dF9jb2x1bW4gcDpsYXN0LWNoaWxkLFxyXG4gICAgLndwYl9hbGVydCBwOmxhc3QtY2hpbGQsXHJcbiAgICAud3BiX3RleHRfY29sdW1uIDpsYXN0LWNoaWxkLFxyXG4gICAgLndwYl90ZXh0X2NvbHVtbiBwOmxhc3QtY2hpbGQge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IGluaGVyaXQ7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC5pY29ucyB7XHJcbiAgICAgICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xyXG4gICAgICAgIHdpZHRoOiA1MHB4O1xyXG4gICAgICAgIGhlaWdodDogNTBweDtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgcmlnaHQ6IDE1cHg7XHJcbiAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvLyAvLyB0cmFuc21pc3Npb25cclxuICAgIC8vICN0YWItMTU3MjYyMDE2NDE5Ny01LTkge1xyXG4gICAgLy8gICAgIC50cmFuc21pc3Npb25faWNvbiB7XHJcbiAgICAvLyAgICAgICAgIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XHJcbiAgICAvLyAgICAgfVxyXG4gICAgLy8gfVxyXG4gICAgLy8gLy8gdGVsY29tXHJcbiAgICAvLyAjdGFiLTE1NzI2MjAxNTAwMzEtNC00IHtcclxuICAgIC8vICAgICAudGVsZWNvbV9pY29uIHtcclxuICAgIC8vICAgICAgICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcclxuICAgIC8vICAgICB9XHJcbiAgICAvLyB9XHJcbiAgICAvLyAjdGFiLTE1NzI2MjAxNDM3NDktMy03IHtcclxuICAgIC8vICAgICAuc3Vic3RhdGlvbl9pY29uIHtcclxuICAgIC8vICAgICAgICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcclxuICAgIC8vICAgICB9XHJcbiAgICAvLyB9XHJcbiAgICAvLyAjdGFiLTE1NzI2MjAxMjYzODMtMi0wIHtcclxuICAgIC8vICAgICAucmVuZXdhYmxlc19pY29uIHtcclxuICAgIC8vICAgICAgICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcclxuICAgIC8vICAgICB9XHJcbiAgICAvLyB9XHJcbiAgICAvLyAjdGFiLWJmNTdmNGFlLTNjZGEtMiB7XHJcbiAgICAvLyAgICAgLmRpc3RyaWJ1dGlvbl9pY29uIHtcclxuICAgIC8vICAgICAgICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcclxuICAgIC8vICAgICB9XHJcbiAgICAvLyB9XHJcbiAgICAvLyAudWktdGFicy1wYW5lbCB7XHJcbiAgICAvLyAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcclxuICAgIC8vIH1cclxuICAgIC8vIC51aS10YWJzLW5hdiB7XHJcbiAgICAvLyAgICAgZGlzcGxheTogZmxleDtcclxuICAgIC8vICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgLy8gICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgLy8gICAgIG1hcmdpbi1ib3R0b206IDIwcHggIWltcG9ydGFudDtcclxuICAgIC8vICAgICBsaSB7XHJcbiAgICAvLyAgICAgICAgIGEge1xyXG4gICAgLy8gICAgICAgICAgICAgZm9udC1zaXplOiAxLjFlbTtcclxuICAgIC8vICAgICAgICAgfVxyXG4gICAgLy8gICAgIH1cclxuICAgIC8vIH1cclxuICAgIC8vICN1aS1pZC0yIHtcclxuICAgIC8vICAgICBAaW5jbHVkZSBmbGV4O1xyXG4gICAgLy8gICAgIEBpbmNsdWRlIGZsZXgtYWxpZ24taXRlbXMoY2VudGVyKTtcclxuICAgIC8vICAgICAmOmJlZm9yZSB7XHJcbiAgICAvLyAgICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgLy8gICAgICAgICB3aWR0aDogMzVweDtcclxuICAgIC8vICAgICAgICAgaGVpZ2h0OiAzNXB4O1xyXG4gICAgLy8gICAgICAgICBiYWNrZ3JvdW5kOiB1cmwoJ2h0dHA6Ly9kZXZlbG9wbWVudC5zcGlkZXJvd2xzLmNvbS9mb3JiZXNicm9zL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE5LzExL1dvb2Rlbl9Qb2xlX01PLnBuZycpO1xyXG4gICAgLy8gICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAvLyAgICAgICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxuICAgIC8vICAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlciAhaW1wb3J0YW50O1xyXG4gICAgLy8gICAgIH1cclxuICAgIC8vIH1cclxuICAgIC8vICN1aS1pZC0zIHtcclxuICAgIC8vICAgICBAaW5jbHVkZSBmbGV4O1xyXG4gICAgLy8gICAgIEBpbmNsdWRlIGZsZXgtYWxpZ24taXRlbXMoY2VudGVyKTtcclxuICAgIC8vICAgICAmOmJlZm9yZSB7XHJcbiAgICAvLyAgICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgLy8gICAgICAgICB3aWR0aDogMzVweDtcclxuICAgIC8vICAgICAgICAgaGVpZ2h0OiAzNXB4O1xyXG4gICAgLy8gICAgICAgICBiYWNrZ3JvdW5kOiB1cmwoJ2h0dHA6Ly9kZXZlbG9wbWVudC5zcGlkZXJvd2xzLmNvbS9mb3JiZXNicm9zL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE5LzExL1dpbmRfMl9NTy5wbmcnKTtcclxuICAgIC8vICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgLy8gICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbiAgICAvLyAgICAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXIgIWltcG9ydGFudDtcclxuICAgIC8vICAgICB9XHJcbiAgICAvLyB9XHJcbiAgICAvLyAjdWktaWQtNCB7XHJcbiAgICAvLyAgICAgQGluY2x1ZGUgZmxleDtcclxuICAgIC8vICAgICBAaW5jbHVkZSBmbGV4LWFsaWduLWl0ZW1zKGNlbnRlcik7XHJcbiAgICAvLyAgICAgJjpiZWZvcmUge1xyXG4gICAgLy8gICAgICAgICBjb250ZW50OiAnJztcclxuICAgIC8vICAgICAgICAgd2lkdGg6IDM1cHg7XHJcbiAgICAvLyAgICAgICAgIGhlaWdodDogMzVweDtcclxuICAgIC8vICAgICAgICAgYmFja2dyb3VuZDogdXJsKCdodHRwOi8vZGV2ZWxvcG1lbnQuc3BpZGVyb3dscy5jb20vZm9yYmVzYnJvcy93cC1jb250ZW50L3VwbG9hZHMvMjAxOS8xMS9TdWJzdGF0aW9uLnBuZycpO1xyXG4gICAgLy8gICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAvLyAgICAgICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxuICAgIC8vICAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlciAhaW1wb3J0YW50O1xyXG4gICAgLy8gICAgIH1cclxuICAgIC8vIH1cclxuICAgIC8vICN1aS1pZC01IHtcclxuICAgIC8vICAgICBAaW5jbHVkZSBmbGV4O1xyXG4gICAgLy8gICAgIEBpbmNsdWRlIGZsZXgtYWxpZ24taXRlbXMoY2VudGVyKTtcclxuICAgIC8vICAgICAmOmJlZm9yZSB7XHJcbiAgICAvLyAgICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgLy8gICAgICAgICB3aWR0aDogMzVweDtcclxuICAgIC8vICAgICAgICAgaGVpZ2h0OiAzNXB4O1xyXG4gICAgLy8gICAgICAgICBiYWNrZ3JvdW5kOiB1cmwoJ2h0dHA6Ly9kZXZlbG9wbWVudC5zcGlkZXJvd2xzLmNvbS9mb3JiZXNicm9zL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDE5LzExL1RlbGVjb21fMl9NTy5wbmcnKTtcclxuICAgIC8vICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgLy8gICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbiAgICAvLyAgICAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXIgIWltcG9ydGFudDtcclxuICAgIC8vICAgICB9XHJcbiAgICAvLyB9XHJcbiAgICAvLyAjdWktaWQtNiB7XHJcbiAgICAvLyAgICAgQGluY2x1ZGUgZmxleDtcclxuICAgIC8vICAgICBAaW5jbHVkZSBmbGV4LWFsaWduLWl0ZW1zKGNlbnRlcik7XHJcbiAgICAvLyAgICAgJjpiZWZvcmUge1xyXG4gICAgLy8gICAgICAgICBjb250ZW50OiAnJztcclxuICAgIC8vICAgICAgICAgd2lkdGg6IDM1cHg7XHJcbiAgICAvLyAgICAgICAgIGhlaWdodDogMzVweDtcclxuICAgIC8vICAgICAgICAgYmFja2dyb3VuZDogdXJsKCdodHRwOi8vZGV2ZWxvcG1lbnQuc3BpZGVyb3dscy5jb20vZm9yYmVzYnJvcy93cC1jb250ZW50L3VwbG9hZHMvMjAxOS8xMS9UcmFuc21pc3Npb25fVG93ZXJfTU8ucG5nJyk7XHJcbiAgICAvLyAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIC8vICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG4gICAgLy8gICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyICFpbXBvcnRhbnQ7XHJcbiAgICAvLyAgICAgfVxyXG4gICAgLy8gfVxyXG4gICAgLnByb2plY3RzLWNvbnRhaW5lciB7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC5wcm9qZWN0LXNpbmdsZS1kZXRhaWxzIHtcclxuICAgICAgICBwYWRkaW5nOiAyJSA1JTtcclxuICAgICAgICAvLyBoMyB7XHJcbiAgICAgICAgLy8gICAgIGZvbnQtc2l6ZTogMS4yZW07XHJcbiAgICAgICAgLy8gICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICAgICAgLy8gICAgIGxpbmUtaGVpZ2h0OiAyNXB4O1xyXG4gICAgICAgIC8vIH1cclxuICAgICAgICAmX19pbmZvcm1hdGlvbiB7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDAgIWltcG9ydGFudDtcclxuICAgICAgICAgICAgbWFyZ2luOiAwICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDI1cHggIWltcG9ydGFudDtcclxuICAgICAgICAgICAgbGkge1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4zZW07XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogIzk5OTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBzdHJvbmcge1xyXG4gICAgICAgICAgICAgICAgY29sb3I6ICMwMDA7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDlweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAmX19kZXNjcmlwdGlvbiB7XHJcbiAgICAgICAgICAgIHAge1xyXG4gICAgICAgICAgICAgICAgY29sb3I6ICM5OTk7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuMmVtO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHVsIHtcclxuICAgICAgICAgICAgICAgIGxpIHtcclxuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxLjJlbTtcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgJjptYXJrZXIge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAmOmJlZm9yZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdG9wOiA4cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6IC0yMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogN3B4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDdweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogJGNvbG9yLW9yYW5nZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAmX19jYXRlZ29yeSB7XHJcbiAgICAgICAgICAgIG1hcmdpbjogNTBweCAwcHg7XHJcbiAgICAgICAgICAgIGltZyB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNDVweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAmX190aXRsZSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMi4yZW07XHJcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZjQ0ZDBjO1xyXG4gICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMjVweDtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gLnByb2plY3QtY2F0ZWdvcnkge1xyXG4gICAgICAgIC8vICAgICBtYXJnaW46IDUwcHggMHB4O1xyXG4gICAgICAgIC8vICAgICBpbWcge1xyXG4gICAgICAgIC8vICAgICAgICAgd2lkdGg6IDQ1cHg7XHJcbiAgICAgICAgLy8gICAgIH1cclxuICAgICAgICAvLyB9XHJcbiAgICAgICAgJl9faW1hZ2Uge1xyXG4gICAgICAgICAgICAmLS1ob2xkZXIge1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiBhdXRvO1xyXG4gICAgICAgICAgICAgICAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgICAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC5zZXJ2aWNlcyB7XHJcbiAgICAgICAgJl9faWNvbnMge1xyXG4gICAgICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICAgICAgb3BhY2l0eTogLjU7XHJcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSB0cmFuc2l0aW9uKC4zcyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYSB7XHJcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAxICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgLnBhcmFncmFwaC10ZXh0IHtcclxuICAgICAgICAud3BiX3dyYXBwZXIge1xyXG4gICAgICAgICAgICBwIHtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMS41ZW07XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogJGNvbG9yLWJsYWNrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvLyAuZnAtaW5uZXItaG9sZGVyIC5pbWctaG9sZGVyIHtcclxuICAgIC8vICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgLy8gICAgIGhlaWdodDogMjAwcHg7XHJcbiAgICAvLyAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgLy8gICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICAvLyAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xyXG4gICAgLy8gfVxyXG4gICAgLy8gLmZwLWlubmVyLWhvbGRlciAuaW1nLWhvbGRlciAuYXR0YWNobWVudC10aHVtYm5haWwuc2l6ZS10aHVtYm5haWwge1xyXG4gICAgLy8gICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIC8vICAgICByaWdodDogNXB4O1xyXG4gICAgLy8gICAgIGJvdHRvbTogNXB4O1xyXG4gICAgLy8gICAgIHdpZHRoOiA0MHB4O1xyXG4gICAgLy8gICAgIGhlaWdodDogNDBweDtcclxuICAgIC8vIH1cclxuICAgIC8vIC5mcC10YXhvbm9teS13cmFwcGVyIC5mcHQtaG9sZGVyIGJ1dHRvbiB7XHJcbiAgICAvLyAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbiAgICAvLyAgICAgYm9yZGVyOiAwO1xyXG4gICAgLy8gfVxyXG4gICAgLy8gLmZwLXRheG9ub215LXdyYXBwZXIgLmZwdC1ob2xkZXIge1xyXG4gICAgLy8gICAgIHdpZHRoOiBjYWxjKDEwMCUvNCk7XHJcbiAgICAvLyB9XHJcbiAgICAucHJvamVjdC1jYXRlZ29yeS1maWx0ZXIge1xyXG4gICAgICAgIEBpbmNsdWRlIGZsZXg7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIGJvdHRvbTogLTMwcHg7XHJcbiAgICAgICAgLmZwdC1ob2xkZXIge1xyXG4gICAgICAgICAgICB3aWR0aDogY2FsYygxMDAlLzQpO1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgICAgICAgICBidXR0b24ge1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgICAgICAgICBib3JkZXI6IDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA0MHB4O1xyXG4gICAgICAgICAgICAgICAgb3BhY2l0eTogLjY7XHJcbiAgICAgICAgICAgICAgICBAaW5jbHVkZSB0cmFuc2l0aW9uKC4zcyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC5wcm9qZWN0LWRpc3BsYXktdGh1bWJuYWlsIHtcclxuICAgICAgICA+ZGl2IHtcclxuICAgICAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNDBweDtcclxuICAgICAgICB9XHJcbiAgICAgICAgLmltZy1ob2xkZXIge1xyXG4gICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDIwMHB4O1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICAgICAgICAgICAgLmF0dGFjaG1lbnQtdGh1bWJuYWlsLnNpemUtdGh1bWJuYWlsIHtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgIHJpZ2h0OiA1cHg7XHJcbiAgICAgICAgICAgICAgICBib3R0b206IDVweDtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA0MHB4O1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA0MHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICY6YmVmb3JlIHtcclxuICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgICAgIHRvcDogMDtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgdC13aGl0ZSguMik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgICAgICAuZnAtb3ZlcmxheSB7XHJcbiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICAgICAgICAgICAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC50aXRsZS1ob2xkZXIge1xyXG4gICAgICAgICAgICBtYXJnaW46IDAgIWltcG9ydGFudDtcclxuICAgICAgICAgICAgcGFkZGluZy10b3A6IDEwcHg7XHJcbiAgICAgICAgICAgIGgzIHtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMS40ZW07XHJcbiAgICAgICAgICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgLmZwLW92ZXJsYXkge1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgICAgICBAaW5jbHVkZSB0LWJsYWNrKC44KTtcclxuICAgICAgICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgICAgICAgdmlzaWJpbGl0eTogaGlkZGVuO1xyXG4gICAgICAgICAgICBAaW5jbHVkZSB0cmFuc2l0aW9uKC41cyk7XHJcbiAgICAgICAgICAgIGEge1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgICAgICAgICAgcGFkZGluZzogMTBweCAyNXB4O1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogJGNvbG9yLW9yYW5nZTtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAucmVsYXRlZC1wcm9qZWN0LWxpc3Qge1xyXG4gICAgICAgIC50aXRsZSB7XHJcbiAgICAgICAgICAgIG1heC13aWR0aDogMTQwMHB4O1xyXG4gICAgICAgICAgICBtYXJnaW46IDIwcHggYXV0bztcclxuICAgICAgICB9XHJcbiAgICAgICAgLnByb2plY3QtdGlsZSB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAyMCU7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICBmbG9hdDogbGVmdDtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxNzBweDtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICAgICAgLnByb2plY3Qtb3ZlcmxheSB7XHJcbiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICAgICAgICAgICAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC5wcm9qZWN0LW92ZXJsYXkge1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgdC1ibGFjayguOCk7XHJcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgICAgICAgICAgICAgdmlzaWJpbGl0eTogaGlkZGVuO1xyXG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbiguNXMpO1xyXG4gICAgICAgICAgICAgICAgYSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEwcHggMjVweDtcclxuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAkY29sb3Itb3JhbmdlO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogLjhlbTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgLmNvbnRhY3QtdXMtc2VjdGlvbiB7XHJcbiAgICAgICAgJl9fbGVmdCB7XHJcbiAgICAgICAgICAgIHVsIHtcclxuICAgICAgICAgICAgICAgIGxpIHtcclxuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuNWVtO1xyXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgQGluY2x1ZGUgZmxleDtcclxuICAgICAgICAgICAgICAgICAgICBzdHJvbmcge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTgwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjMDAwO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBiciB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSIsIi5kd3FhLWJyZWFkY3J1bWJzIHtcclxuICAgIGJhY2tncm91bmQ6ICRjb2xvci1zZWNvbmRhcnk7XHJcbiAgICBcclxuICAgIGEge1xyXG4gICAgICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgIFxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAuZHdxYS1jdXJyZW50IHtcclxuICAgICAgICBjb2xvcjogJGNvbG9yLXByaW1hcnk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIFxyXG59IiwiaDIudmNfY3VzdG9tX2hlYWRpbmcge1xyXG4gICAgLy8gY29sb3I6ICRjb2xvci1vcmFuZ2U7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcclxuICAgIC8vIGZvbnQtc2l6ZTogM2VtO1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZSAhaW1wb3J0YW50O1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBmb250LXNpemU6IDIuN2VtO1xyXG4gICAgY29sb3I6ICRjb2xvci1kYXJrXHJcbn1cclxuXHJcbmgxLnZjX2N1c3RvbV9oZWFkaW5nIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHBhZGRpbmctYm90dG9tOiAyMHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxuICAgICY6YWZ0ZXIge1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICBiYWNrZ3JvdW5kOiAjZjAwO1xyXG4gICAgICAgIHdpZHRoOiAxNzRweDtcclxuICAgICAgICBoZWlnaHQ6IDJweDtcclxuICAgICAgICBtYXJnaW46IDEwcHggMDtcclxuICAgIH1cclxufSIsIi53cGJfYWNjb3JkaW9uIHtcclxuICAgIHVsIHtcclxuICAgICAgICBsaSB7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxLjJlbTtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gICAgICAgICAgICAmOm1hcmtlciB7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICY6YmVmb3JlIHtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgIHRvcDogOHB4O1xyXG4gICAgICAgICAgICAgICAgbGVmdDogLTIwcHg7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogN3B4O1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA3cHg7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAkY29sb3Itb3JhbmdlO1xyXG4gICAgICAgICAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuLnVpLWFjY29yZGlvbi1oZWFkZXIgYSB7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICBmb250LXNpemU6IDEuNWVtO1xyXG59XHJcblxyXG4udWktYWNjb3JkaW9uLWhlYWRlciB7XHJcbiAgICBiYWNrZ3JvdW5kOiAkY29sb3Itb3JhbmdlO1xyXG4gICAgY29sb3I6ICNmZmYgIWltcG9ydGFudDtcclxufVxyXG5cclxuLnVpLWFjY29yZGlvbi1jb250ZW50IHtcclxuICAgIC53cGJfd3JhcHBlciBzdHJvbmcge1xyXG4gICAgICAgIGNvbG9yOiAjMDAwO1xyXG4gICAgfVxyXG59IiwiXHJcblxyXG4vL2NlbnRlciBzaG9ydGNvZGVzXHJcbi53eC1oZWFkaW5nLmFsaWduLWxlZnQsXHJcbi53eC1idXR0b24uYWxpZ24tbGVmdCBcclxue1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxufSBcclxuXHJcbi53eC1oZWFkaW5nLmFsaWduLWNlbnRlciwgXHJcbi53eC1idXR0b24uYWxpZ24tY2VudGVyIFxyXG57XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn0gXHJcblxyXG4ud3gtaGVhZGluZy5hbGlnbi1yaWdodCxcclxuLnd4LWJ1dHRvbi5hbGlnbi1yaWdodCBcclxue1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbn0gXHJcblxyXG4vL2ZvbnQgdXNlZFxyXG4kZm9udC1zZWxlY3Q6JGZvbnQtcHJpbWFyeTtcclxuXHJcblxyXG5cclxuLy9SRVNQT05TSVZFIFNJWkUgU1RBUlRTIEhFUkVcclxuQGltcG9ydCBcImhlYWRpbmdzXCI7XHJcbkBpbXBvcnQgXCJidXR0b25zXCI7IFxyXG5AaW1wb3J0IFwidGh1bWJuYWlsd3RleHRcIjsgICBcclxuQGltcG9ydCBcImRldGFpbHNcIjsgICAgIFxyXG4gXHJcblxyXG5cclxuIiwiXHJcbi8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG4vL0hFQURJTkdTXHJcbi8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuLy9IRUFESU5HIFNUWUxFIDFcclxuLnd4LWhlYWRpbmcge1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lICFpbXBvcnRhbnQ7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIG1hcmdpbi10b3A6IDE1cHg7XHJcbiAgICAvLyBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNTVweDtcclxuXHJcbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMDBweCkge1xyXG4gICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICAuaW1hZ2Uge1xyXG4gICAgICAgIHdpZHRoOiAyMDBweDtcclxuICAgICAgICBtYXJnaW46IGF1dG87XHJcbiAgICB9XHJcblxyXG4gICAgLnByaW1hcnktaGVhZGluZyxcclxuICAgIC5zZWNvbmRhcnktaGVhZGluZyxcclxuICAgIC50aGlyZC1oZWFkaW5nLFxyXG4gICAgLmZvdXJ0aC1oZWFkaW5nXHJcbiAgICB7XHJcblxyXG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuLy8gICAgICAgIGZvbnQtc2l6ZTozLjA2M2VtO1xyXG4gICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiAkZm9udC1wcmltYXJ5O1xyXG4gICAgICAgIC8vICAgICAgICBjb2xvcjogJGNvbG9yLWRhcms7XHJcbi8vICAgICAgICBmb250LXdlaWdodDogJGJvbGQ7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cclxuICAgICAgICAvLyAmOjpiZWZvcmUge1xyXG4gICAgICAgIC8vICAgICBjb250ZW50OiAnJztcclxuICAgICAgICAvLyAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIC8vICAgICBoZWlnaHQ6IDIxcHg7XHJcbiAgICAgICAgLy8gICAgIHdpZHRoOiAxMTRweDtcclxuICAgICAgICAvLyAgICAgYm90dG9tOiAtMjVweDtcclxuICAgICAgICAvLyAgICAgbWFyZ2luLXJpZ2h0OiAxNXB4O1xyXG4gICAgICAgIC8vICAgICAvKiBtYXJnaW4tYm90dG9tOiAtMjBweDsgKi9cclxuICAgICAgICAvLyAgICAgbWFyZ2luOiBhdXRvICFpbXBvcnRhbnQ7XHJcblxyXG4gICAgICAgIC8vICAgICByaWdodDogMDtcclxuICAgICAgICAvLyAgICAgbGVmdDogMDtcclxuICAgICAgICAvLyAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG5cclxuICAgICAgICAvLyB9XHJcblxyXG5cclxuXHJcbiAgICB9XHJcblxyXG5cclxuXHJcblxyXG4gICAgLnByaW1hcnktaGVhZGluZyB7XHJcbiAgICAgICAgZm9udC1zaXplOiAzZW07XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAxNXB4O1xyXG5cclxuXHJcbiAgICAgICAgJjo6YWZ0ZXIge1xyXG4gICAgICAgICAgICB3aWR0aDozMDBweDtcclxuICAgICAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6Jyc7XHJcbiAgICAgICAgICAgIGxlZnQ6MDtcclxuICAgICAgICAgICAgYm90dG9tOjA7XHJcbiAgICAgICAgICAgIGhlaWdodDoycHg7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6YmxvY2s7IFxyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiRjb2xvci13aGl0ZTtcclxuICAgICAgICB9XHJcblxyXG5cclxuLy8gICAgICAgICY6OmJlZm9yZSB7XHJcbi8vICAgICAgICAgICAgIGJhY2tncm91bmQ6IHVybCgnLi4vY3VzdG9tLXBocC9zcHJpdGUuanBnJyluby1yZXBlYXQ7XHJcbi8vICAgICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuICAgIC5zZWNvbmRhcnktaGVhZGluZyB7XHJcbiAgICAgICAgZm9udC1zaXplOiAyLjVlbTtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiAkbWVkaXVtO1xyXG4gICAgICAgIGNvbG9yOiAkY29sb3ItcHJpbWFyeTtcclxuXHJcblxyXG4gICAgICAgICY6OmJlZm9yZSB7XHJcbiAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLnRoaXJkLWhlYWRpbmcge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS4zZW07XHJcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6ICRtZWRpdW07XHJcbiAgICAgICAgY29sb3I6ICRjb2xvci13aGl0ZTtcclxuICAgICAgICBmb250LWZhbWlseTogJGZvbnQtc2Vjb25kYXJ5O1xyXG5cclxuICAgIH1cclxuXHJcblxyXG4gICAgLmZvdXJ0aC1oZWFkaW5nIHtcclxuICAgICAgICBjb2xvcjogJGNvbG9yLXdoaXRlO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMy41ZW07XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMjVweDtcclxuXHJcblxyXG4gICAgfVxyXG5cclxuXHJcbiAgICAuaGVhZGluZy1zdWJ0aXRsZSxwIHtcclxuICAgICAgICB3aWR0aDogODAlO1xyXG4gICAgICAgIG1hcmdpbjogYXV0bztcclxuICAgICAgICBmb250LXdlaWdodDogJGxpZ2h0O1xyXG4gICAgICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxuICAgICAgICBmb250LXNpemU6IDEuMWVtO1xyXG4gICAgfVxyXG5cclxuICAgIC5pbWFnZSB7XHJcbiAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogMTBweDtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuXHJcbn1cclxuXHJcbi5uby1zdWJ0aXRsZSB7XHJcbiAgICAuaGVhZGluZy1zdWJ0aXRsZSxwIHtcclxuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgIH1cclxufVxyXG5cclxuXHJcbi53eC1oZWFkaW5nLmFsaWduLWxlZnQge1xyXG4gICAgLmhlYWRpbmctc3VidGl0bGUge1xyXG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjNlbTtcclxuLy8gICAgICAgIGZvbnQtd2VpZ2h0OiAkYm9sZDtcclxuICAgICAgICBsZXR0ZXItc3BhY2luZzogaW5oZXJpdDtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcclxuICAgICAgICBmb250LWZhbWlseTogJGZvbnQtc2Vjb25kYXJ5O1xyXG4gICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgICAgICBsaW5lLWhlaWdodDogMjRweDtcclxuICAgIH1cclxufVxyXG5cclxuLndpdGgtc3VidGl0bGUge1xyXG4gICAgLmhlYWRpbmctc3VidGl0bGUscHtcclxuICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG5cclxufVxyXG5cclxuXHJcblxyXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDo4MDBweCkge1xyXG5cclxuICAgICAgICAgLnd4LWhlYWRpbmcge1xyXG4gICAgICAgICAgICAgICAgLnByaW1hcnktaGVhZGluZyxcclxuICAgICAgICAgICAgICAgIC5zZWNvbmRhcnktaGVhZGluZyxcclxuICAgICAgICAgICAgICAgIC50aGlyZC1oZWFkaW5nLFxyXG4gICAgICAgICAgICAgICAgLmZvdXJ0aC1oZWFkaW5nXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxLjVlbSAhaW1wb3J0YW50O1xyXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgIH1cclxuXHJcblxyXG4gICAgfVxyXG4iLCJcclxuXHJcbi8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG4vL0JVVFRPTlMgXHJcbi8vKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5cclxuLy9CVVRUT05TIFNUWUxFIDEgXHJcblxyXG5cclxuLnd4LWJ1dHRvbi5wcmltYXJ5LWJ1dHRvbiB7XHJcbiAgICAgICAgY29sb3I6ICRjb2xvci13aGl0ZTtcclxuICAgICAgICBiYWNrZ3JvdW5kOiAkY29sb3ItcHJpbWFyeTtcclxuICAgICAgICBAaW5jbHVkZSBib3JkZXItcmFkaXVzKDEwMHB4KTtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgcGFkZGluZzogMTBweCAzMHB4O1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICB3aWR0aDogODAlO1xyXG4gICAgICAgIG1hcmdpbjogYXV0bztcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOjIwcHg7XHJcbiAgICBcclxuICAgICAgICBwIHtcclxuICAgICAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogJGJvbGQ7XHJcbiAgICAgICAgICAgICBjb2xvcjogJGNvbG9yLXdoaXRlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgb3BhY2l0eTogLjM7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgfVxyXG5cclxuLnd4LWJ1dHRvbi5zZWNvbmRhcnktYnV0dG9uIHtcclxuICAgICAgICBib3JkZXI6dHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6ICRib2xkO1xyXG4gICAgICAgIHBhZGRpbmc6IDE1cHggMjBweDtcclxuICAgICAgICBAaW5jbHVkZSBib3JkZXItcmFkaXVzKDVweCk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgJjo6YmVmb3JlIHtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGNvbnRlbnQ6IFwiXFxmMDk1XCI7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxuICAgICAgICAgICAgQGluY2x1ZGUgZm9udGF3ZXNvbWU7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZToxLjNlbTsgXHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgXHJcbiAgICAgICAgXHJcbn1cclxuICAgIFxyXG4gICAgICAgXHJcbiAgICBcclxuLnd4LWJ1dHRvbi50aGlyZC1idXR0b24ge1xyXG4gICAgY29sb3I6ICRjb2xvci13aGl0ZTtcclxuICAgIGJhY2tncm91bmQ6ICRjb2xvci1wcmltYXJ5O1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgcGFkZGluZzogNXB4IDEwcHg7XHJcbiAgICAgICAgXHJcbiAgICBwIHtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgfVxyXG4gICAgIFxyXG4gICAgICAgIFxyXG4gICAgJjo6YWZ0ZXIgeyBcclxuICAgICAgICBjb250ZW50OiBcIlxcZjE3OFwiO1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiA1cHg7XHJcbiAgICAgICAgQGluY2x1ZGUgZm9udGF3ZXNvbWU7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICY6aG92ZXIge1xyXG4gICAgICAgIG9wYWNpdHk6IC42O1xyXG4gICAgICAgIEBpbmNsdWRlIHRyYW5zZm9ybV90cmFuc2xhdGUoMTUlLDApO1xyXG4gICAgfVxyXG4gICAgICAgIFxyXG59XHJcblxyXG5cclxuXHJcblxyXG4iLCJAbWl4aW4gY29sb3ItZ3JhZGllbnQge1xyXG4vKiBQZXJtYWxpbmsgLSB1c2UgdG8gZWRpdCBhbmQgc2hhcmUgdGhpcyBncmFkaWVudDogaHR0cDovL2NvbG9yemlsbGEuY29tL2dyYWRpZW50LWVkaXRvci8jMDAwMDAwKzQ4LDAwMDAwMCsxMDAmMCswLDAuNjUrOTggKi9cclxuYmFja2dyb3VuZDogLW1vei1saW5lYXItZ3JhZGllbnQodG9wLCAgcmdiYSgwLDAsMCwwKSAwJSwgcmdiYSgwLDAsMCwwLjMyKSA0OCUsIHJnYmEoMCwwLDAsMC42NSkgOTglLCByZ2JhKDAsMCwwLDAuNjUpIDEwMCUpOyAvKiBGRjMuNi0xNSAqL1xyXG5iYWNrZ3JvdW5kOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsICByZ2JhKDAsMCwwLDApIDAlLHJnYmEoMCwwLDAsMC4zMikgNDglLHJnYmEoMCwwLDAsMC42NSkgOTglLHJnYmEoMCwwLDAsMC42NSkgMTAwJSk7IC8qIENocm9tZTEwLTI1LFNhZmFyaTUuMS02ICovXHJcbmJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sICByZ2JhKDAsMCwwLDApIDAlLHJnYmEoMCwwLDAsMC4zMikgNDglLHJnYmEoMCwwLDAsMC42NSkgOTglLHJnYmEoMCwwLDAsMC42NSkgMTAwJSk7IC8qIFczQywgSUUxMCssIEZGMTYrLCBDaHJvbWUyNissIE9wZXJhMTIrLCBTYWZhcmk3KyAqL1xyXG5maWx0ZXI6IHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5ncmFkaWVudCggc3RhcnRDb2xvcnN0cj0nIzAwMDAwMDAwJywgZW5kQ29sb3JzdHI9JyNhNjAwMDAwMCcsR3JhZGllbnRUeXBlPTAgKTsgLyogSUU2LTkgKi9cclxuXHJcblxyXG59XHJcblxyXG5cclxuLnRleHQtaW1hZ2Utd3JhcHBlciB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyNXB4O1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuXHJcbiAgICAudGV4dC1pbWFnZS1ob2xkZXIge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBAaW5jbHVkZSB0cmFuc2l0aW9uKC4zcyk7XHJcblxyXG5cclxuICAgICAgICAmOjpiZWZvcmUge1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMDBweDtcclxuICAgICAgICAgICAgQGluY2x1ZGUgY29sb3ItZ3JhZGllbnQ7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgYm90dG9tOiAwO1xyXG4gICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICBjb250ZW50OiAnJztcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGltZyB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaDQge1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICAgICAgcGFkZGluZzogMjBweDtcclxuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICAgICAgY29sb3I6ICRjb2xvci13aGl0ZTtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxLjg3NWVtO1xyXG4gICAgICAgICAgICBAaW5jbHVkZSB0cmFuc2l0aW9uKDFzKTtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6ICRtZWRpdW07XHJcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiRmb250LXByaW1hcnk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLm92ZXJsYXkge1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgIHRvcDogMDtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgQGluY2x1ZGUgdC1ibGFjayguOCk7XHJcbi8vICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbiguM3MpO1xyXG4gICAgICAgICAgICBvcGFjaXR5OiAwO1xyXG5cclxuICAgICAgICAgICAgLm92ZXJsYXktaG9sZGVyIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDc1cHg7XHJcbiAgICAgICAgICAgICAgICBib3R0b206IDA7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW46IGF1dG87XHJcbiAgICAgICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogJGNvbG9yLXdoaXRlO1xyXG5cclxuICAgICAgICAgICAgICAgIGg1IHtcclxuICAgICAgICAgICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiRjb2xvci1wcmltYXJ5O1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIHAge1xyXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZTtcclxuICAgICAgICAgICAgICAgICAgICBjb2xvcjogJGNvbG9yLXdoaXRlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIC5kZXNjcmlwdGlvbiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgICAgICAgICAgICAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xyXG4gICAgICAgICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxNXB4OyAgICAgLyogZmFsbGJhY2sgKi9cclxuICAgICAgICAgICAgICAgICAgICAgICBtYXgtaGVpZ2h0OiAzMnB4OyAgICAgIC8qIGZhbGxiYWNrICovXHJcbiAgICAgICAgICAgICAgICAgICAgICAgLXdlYmtpdC1saW5lLWNsYW1wOiAyOyAvKiBudW1iZXIgb2YgbGluZXMgdG8gc2hvdyAqL1xyXG4gICAgICAgICAgICAgICAgICAgICAgIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOi44ZW07XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB9XHJcblxyXG5cclxuICAgICAgICB9XHJcblxyXG5cclxuICAgICAgICAmOmhvdmVyIHtcclxuXHJcbiAgICAgICAgICAgIC5vdmVybGF5IHtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaDQge1xyXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwxMDAlKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcblxyXG5cclxufVxyXG5cclxuXHJcbi52Y19jb2wtc20tMyB7XHJcblxyXG4gICAgLnRleHQtaW1hZ2Utd3JhcHBlciB7XHJcblxyXG4gICAgICAgIC50ZXh0LWltYWdlLWhvbGRlciB7XHJcblxyXG4gICAgICAgICAgICBoNCB7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuM2VtO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG59XHJcbiIsInVsLnd4LWRldGFpbHMge1xyXG4gICAgd2lkdGg6IDcwJTtcclxuICAgIFxyXG4gICAgbGkge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS4zZW07XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHBhZGRpbmctbGVmdDogNTBweDtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgICAgICAgXHJcbiAgICAgICAgXHJcbiAgICAgICAgJjpiZWZvcmUge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBhIHtcclxuICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgICAgICAgICBjb2xvcjogJGNvbG9yLXNlY29uZGFyeTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICAgICAgY29sb3I6JGNvbG9yLXByaW1hcnk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgaSB7XHJcbi8vICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4vLyAgICAgICAgICAgIGxlZnQ6IDA7XHJcbi8vICAgICAgICAgICAgdG9wOiAycHg7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4yZW07IFxyXG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgICY6OmFmdGVyIHtcclxuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgIGNsZWFyOiBib3RoO1xyXG4gICAgICAgICAgICBjb250ZW50OiAnJzsgIFxyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgIH1cclxuICAgIFxyXG4gICAgXHJcbn0gXHJcblxyXG4iXX0= */
